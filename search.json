[{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://loelschlaeger.de/ino/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://loelschlaeger.de/ino/articles/example_hmm.html","id":"application-to-financial-data","dir":"Articles","previous_headings":"","what":"Application to financial data","title":"Example: Hidden Markov Model","text":"example data set considered throughout vignette covers time series log returns German stock index DAX 30 years. DAX closing prices freely accessible via Yahoo Finance can downloaded via download_data() function fHMM package (Oelschläger, Adam, Michels 2023). can easily transformed log returns using dplyr package (Wickham et al. 2023): time series looks follows:  log returns continuous can take negative positive values, consider HMM Gaussian state-dependent distributions — note applications instead use t-distributions also model kurtosis (Oelschläger Adam 2021).","code":"library(\"fHMM\") library(\"dplyr\") dax <- download_data(symbol = \"^GDAXI\", from = \"1990-01-01\", to = \"2020-01-01\") %>%   as_tibble() %>%   reframe(     date = as.Date(Date, format = \"%Y-%m-%d\"),     logreturn = c(NA, diff(log(Close), lag = 1))   ) %>%   filter(!is.na(logreturn)) %>%   print() #> # A tibble: 7,475 × 2 #>    date       logreturn #>    <date>         <dbl> #>  1 1990-01-03  0.0429   #>  2 1990-01-04 -0.0197   #>  3 1990-01-05 -0.00989  #>  4 1990-01-08  0.0156   #>  5 1990-01-09  0.0130   #>  6 1990-01-10 -0.0121   #>  7 1990-01-11  0.000201 #>  8 1990-01-12  0.00947  #>  9 1990-01-15 -0.0111   #> 10 1990-01-16 -0.0188   #> # ℹ 7,465 more rows library(\"ggplot2\") ggplot(dax, aes(x = date, y = logreturn)) +   geom_point() +   geom_line() +   scale_x_date() +   scale_y_continuous(labels = scales::label_percent())"},{"path":"https://loelschlaeger.de/ino/articles/example_hmm.html","id":"likelihood-optimization","dir":"Articles","previous_headings":"","what":"Likelihood optimization","title":"Example: Hidden Markov Model","text":"consider 2-state (N = 2) Gaussian-HMM model bearish bullish market periods. results six parameters (npar = 6) estimated: two identified parameters transition probability matrix (t.p.m.), two means state-dependent distributions, two standard deviations state-dependent distributions. likelihood Gaussian-HMM given function f_ll_hmm() provided ino package. argument neg = TRUE indicates minimize negative log-likelihood, set_optimizer(optimizer_nlm()) selects optimizer stats::nlm() (see introductory vignette details specify optimizers).","code":"hmm_ino <- Nop$new(   f = f_ll_hmm,    npar = 6,    data = dax$logreturn,    N = 2,    neg = TRUE )$ set_optimizer(optimizer_nlm())"},{"path":"https://loelschlaeger.de/ino/articles/example_hmm.html","id":"random-initialization","dir":"Articles","previous_headings":"Likelihood optimization","what":"Random initialization","title":"Example: Hidden Markov Model","text":"Randomly chosen starting values first initialization approach: first two starting values belong -diagonal t.p.m., draw starting values \\(\\mathcal{U}(-2,-1)\\) distribution — use multinomial logit link ensure probabilities 0 1, value -1.5 correspond probabilities staying state 1 2 80%. two means, draw two random numbers standard normal distribution, time series indicates returns fairly close zero. starting values standard deviations drawn \\(\\mathcal{U}(0.5,2)\\) distribution (note exponentiate standard deviations likelihood constrained positive, hence log-transform starting values). $optimize() method argument initial = sampler performs runs = 100 optimization runs starting values drawn specified distributions:","code":"sampler <- function() {   c(stats::runif(2, -2, -1), stats::rnorm(2), log(stats::runif(2, 0.5, 2))) } hmm_ino$optimize(initial = sampler, runs = 100, label = \"random\")"},{"path":"https://loelschlaeger.de/ino/articles/example_hmm.html","id":"educated-guesses","dir":"Articles","previous_headings":"Likelihood optimization","what":"Educated guesses","title":"Example: Hidden Markov Model","text":"selecting fixed starting values, consider sets starting values fall ranges considered . can considered “educated guesses” likely close global optimum: grid results total 64 starting values, can specified initial argument:","code":"tpm_entry_1 <- tpm_entry_2 <- c(-2, -2.5) mu_1 <- c(0, -0.05) mu_2 <- c(0, 0.05) sd_1 <- c(log(0.1), log(0.5)) sd_2 <- c(log(0.75), log(1)) starting_values <- asplit(expand.grid(   tpm_entry_1, tpm_entry_2, mu_1, mu_2, sd_1, sd_2),    MARGIN = 1 ) hmm_ino$optimize(initial = starting_values, label = \"educated_guess\")"},{"path":"https://loelschlaeger.de/ino/articles/example_hmm.html","id":"subset-initialization","dir":"Articles","previous_headings":"Likelihood optimization","what":"Subset initialization","title":"Example: Hidden Markov Model","text":"Since data set large, containing total 7475 share return observations, might beneficial obtain initial values first fitting model data subset. data subset chosen small enough, estimation subset much faster. hand, data subset chosen large enough still contain enough information, estimates subset already lie close estimates full model. illustrate subset initialization strategy, consider first quarter observations, can extracted using $reduce() method arguments = \"first\" prop = 0.25. starting values optimizations subset drawn sampler() function defined . use $optimize() fit HMM, now data subset. $continue(), use estimates obtained optimization subset initial values fit model entire data set. entire data set restored via $reset_argument(\"data\").2","code":"hmm_ino$   reduce(\"data\", how = \"first\", prop = 0.25)$   optimize(initial = sampler, runs = 100, label = \"subset\")$   reset_argument(\"data\")$   continue()"},{"path":"https://loelschlaeger.de/ino/articles/example_hmm.html","id":"standardize-initialization","dir":"Articles","previous_headings":"","what":"Standardize initialization","title":"Example: Hidden Markov Model","text":"considered log returns range -0.1 0.1. Optimization might facilitated standardizing data first. idea can tested via $standardize() method: Note use $reset_argument() obtain actual (non-standardized) data set.","code":"hmm_ino$   standardize(\"data\")$   optimize(initial = sampler, runs = 100, label = \"standardize\")$   reset_argument(\"data\")"},{"path":[]},{"path":"https://loelschlaeger.de/ino/articles/example_hmm.html","id":"global-versus-local-optima","dir":"Articles","previous_headings":"Evaluating the optimization runs","what":"Global versus local optima","title":"Example: Hidden Markov Model","text":"Selecting starting values HMM likelihood optimization well-known issue, poor starting values may likely result local optima.3 thus first evaluate optimizations comparing likelihood values convergence, can displayed using $optima() method. , sort_by = \"value\" sorts table function value (decreasing order4), only_comparable = TRUE excludes optimization results standardized reduced data set, digitis = 0 ignores decimal places. frequency table indicates 76 264 runs converged smallest (negative) log-likelihood value, appears global optimum (note negative log-likelihood values). However, 188 runs apparantly got stuck local optima. Using summary(), now can investigate optimum values (\"value\"), corresponding parameter vectors (\"parameter\"), optimization times (\"seconds\") runs (, first ten shown):5 final parameter estimates (.e., parameters associated global optimum) can accessed via $best_parameter() … .. corresponding likelihood value : Note attributes \"run\" \"optimizer\" provide information, optimization run optimizer estimate obtained. can compute proportion runs lead apparent global optimum -22445.58 follows: educated guesses 55% runs converge global optimum, random initialization subset initialization strategies get stuck often local optima. Note standardized initialization approach compared approaches .","code":"hmm_ino$optima(sort_by = \"value\", only_comparable = TRUE, digits = 0) #>    value frequency #> 1 -22446        76 #> 2 -22445        40 #> 3 -21780         3 #> 4 -21372       144 #> 5 -21353         1 summary(hmm_ino, which_element = c(\"value\", \"parameter\", \"seconds\")) %>%    head(n = 10) #>        value                                 parameter seconds #> 1  -21372.14  -2.05, -18.88, 0.00, -2.35, -4.28, -4.64   12.81 #> 2  -22445.58    -3.70, -4.52, 0.00, 0.00, -4.72, -3.86   14.84 #> 3  -21372.14   -15.59, -2.08, 5.06, 0.00, -7.44, -4.28    9.57 #> 4  -22445.58    -3.70, -4.52, 0.00, 0.00, -4.72, -3.86   20.73 #> 5  -22445.58    -4.52, -3.70, 0.00, 0.00, -3.86, -4.72   21.37 #> 6  -21352.70 -15.92, -35.48, 14.12, 0.00, -8.09, -4.28   18.44 #> 7  -22445.58    -4.52, -3.70, 0.00, 0.00, -3.86, -4.72   32.38 #> 8  -21372.14 -30.36, -3.62, -22.03, 0.00, -4.71, -4.28   24.00 #> 9  -21372.13  -2.88, -13.94, 0.00, 1.46, -4.28, -12.26    8.39 #> 10 -22445.58    -3.70, -4.52, 0.00, 0.00, -4.72, -3.86   23.36 hmm_ino$best_parameter() #> [1] -3.70 -4.52  0.00  0.00 -4.72 -3.86 #> attr(,\"run\") #> [1] 89 #> attr(,\"optimizer\") #> [1] \"stats::nlm\" hmm_ino$best_value() #> [1] -22445.58 #> attr(,\"run\") #> [1] 89 #> attr(,\"optimizer\") #> [1] \"stats::nlm\" summary(hmm_ino, c(\"label\", \"value\", \"seconds\"), global_optimum = \"value < -22445\", only_comparable = TRUE) %>%    group_by(label) %>%    summarise(proportion = mean(global_optimum, na.rm = TRUE)) #> # A tibble: 3 × 2 #>   label          proportion #>   <chr>               <dbl> #> 1 educated_guess      0.562 #> 2 random              0.4   #> 3 subset              0.4"},{"path":"https://loelschlaeger.de/ino/articles/example_hmm.html","id":"optimization-time","dir":"Articles","previous_headings":"Evaluating the optimization runs","what":"Optimization time","title":"Example: Hidden Markov Model","text":"plot() function can used investigate optimization times across initialization strategies (= \"label\").6  Using output provided summary() data manipulation functions provided package dplyr, can also compute summary statistics interest, like median computation time standard deviation per strategy: subset standardize approach can improve median optimization time factor 2 example compared random initialization approach.","code":"plot(hmm_ino, by = \"label\") summary(hmm_ino, c(\"label\", \"seconds\")) %>%    group_by(label) %>%    summarise(     median_seconds = median(seconds, na.rm = TRUE),     sd_seconds = sd(seconds, na.rm = TRUE)   ) %>%   arrange(median_seconds) #> # A tibble: 4 × 3 #>   label          median_seconds sd_seconds #>   <chr>                   <dbl>      <dbl> #> 1 subset                   8.37       6.16 #> 2 standardize              9.85       1.48 #> 3 educated_guess          14.8        7.28 #> 4 random                  15.9        7.30"},{"path":[]},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Introduction","text":"Optimization great relevance many fields, including finance (portfolio optimization), engineering (minimizing air resistance), statistics (likelihood maximization model fitting). Often, optimization problem hand solved analytically, example explicit formulas gradient Hessian available. cases, numerical optimization algorithms helpful. iteratively explore parameter space, guaranteeing improve function value iteration, eventually converge point improvements can made (Bonnans et al. 2006). R, several functions available can applied numerically solve optimization problems, including (quasi) Newton (stats::nlm(), stats::nlminb(), stats::optim()), direct search (pracma::nelder_mead()), conjugate gradient methods (Rcgmin::Rcgmin()). CRAN Task View: Optimization Mathematical Programming provides comprehensive list packages solving optimization problems. One thing numerical optimizers common initial parameter values must specified, .e., point optimization started. Optimization theory (Nocedal Wright 2006) states choice initial point large influence optimization result, particular convergence time rate. general, starting areas function saturation increases computation time, starting areas non-concavity leads convergence problems convergence local rather global optima. Consequently, numerical optimization can facilitated analyzing initialization effect optimization problem hand putting effort identifying good starting values. However, generally unclear good initial values might affect optimization. Therefore, purpose ino R package1 provide comprehensive toolbox evaluating effect initial values optimization, comparing different initialization strategies, comparing different optimizers.","code":""},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"package-functionality","dir":"Articles","previous_headings":"","what":"Package functionality","title":"Introduction","text":"specify optimization problem ino, use object-oriented framework based R6 package (Chang 2021). general workflow first create Nop object2, apply methods change attributes object, e.g., optimize function investigate optimization results: starting point working ino initialize Nop object via object <- Nop$new(). Next, use method $set_optimizer() define one numerical optimizer. , $evaluate() evaluates $optimize() optimizes objective function. analyzing results, $optima() provides overview identified optima, $plot() $summary() methods summarize optimization runs. methods $standardize() $reduce() available advantageously transform optimization problem. illustrate methods following application.","code":""},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Introduction","text":"demonstrate basic ino workflow context likelihood maximization, fit two-class Gaussian mixture model Geyser eruption times popular faithful data set provided via base R. Remark: Optimization example fast. data set relatively small consider model two classes . Therefore, might seem relevant concerned initialization . However, problem scales: optimization time rise data parameters, case initialization becomes greater issue, see example Shireman, Steinley, Brusco (2017). Additionally, see even simple optimization problem suffers heavily local optima, depending choice initial values.","code":""},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"the-optimization-problem","dir":"Articles","previous_headings":"Workflow","what":"The optimization problem","title":"Introduction","text":"faithful data set contains information eruption times (eruptions) Old Faithful geyser Yellowstone National Park, Wyoming, USA. data histogram hints two clusters short long eruption times, respectively.  clusters, assume normal distribution, consider mixture two Gaussian densities modeling overall eruption times. log-likelihood function defined \\[\\begin{equation} \\ell(\\boldsymbol{\\theta}) = \\sum_{=1}^n \\log\\Big( \\lambda \\phi_{\\mu_1, \\sigma_1^2}(x_i) + (1-\\lambda)\\phi_{\\mu_2,\\sigma_2^2} (x_i) \\Big), \\end{equation}\\] sum goes observations \\(1, \\dots, n = 272\\), \\(\\phi_{\\mu_1, \\sigma_1^2}\\) \\(\\phi_{\\mu_2, \\sigma_2^2}\\) denote normal density first second cluster, respectively, \\(\\lambda\\) mixing proportion. parameter vector estimated thus \\(\\boldsymbol{\\theta} = (\\mu_1, \\mu_2, \\sigma_1, \\sigma_2, \\lambda)\\). exists closed-form solution maximum likelihood estimator \\(\\boldsymbol{\\theta}^* = \\arg\\max_{\\boldsymbol{\\theta}} \\ell(\\boldsymbol{\\theta})\\), need numerical optimization finding function optimum. following function calculates log-likelihood value given parameter vector theta observation vector data. Remark: restrict standard deviations sd positive (via exponential transformation) lambda 0 1 (via logit transformation). function returns negative log-likelihood value default (neg = TRUE). necessary R optimizers minimize (e.g., stats::nlm), can use fact \\(\\arg\\max_{\\boldsymbol{\\theta}} \\ell(\\boldsymbol{\\theta}) = \\arg\\min_{\\boldsymbol{\\theta}} -\\ell(\\boldsymbol{\\theta})\\).","code":"str(faithful) #> 'data.frame':    272 obs. of  2 variables: #>  $ eruptions: num  3.6 1.8 3.33 2.28 4.53 ... #>  $ waiting  : num  79 54 74 62 85 55 88 85 51 85 ... library(\"ggplot2\") ggplot(faithful, aes(x = eruptions)) +    geom_histogram(aes(y = after_stat(density)), bins = 30) +    xlab(\"eruption time (min)\") normal_mixture_llk <- function(theta, data, neg = TRUE){   stopifnot(length(theta) == 5)   mu <- theta[1:2]   sd <- exp(theta[3:4])   lambda <- plogis(theta[5])   llk <- sum(log(lambda * dnorm(data, mu[1], sd[1]) + (1 - lambda) * dnorm(data, mu[2], sd[2])))   ifelse(neg, -llk, llk) } normal_mixture_llk(theta = 1:5, data = faithful$eruptions) #> [1] 1069.623"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"another-optimization-approach-the-expectation-maximization-em-algorithm","dir":"Articles","previous_headings":"Workflow","what":"Another optimization approach: the expectation-maximization (EM) algorithm","title":"Introduction","text":"Solving \\(\\boldsymbol{\\theta}^* = \\arg\\max_{\\boldsymbol{\\theta}} \\ell(\\boldsymbol{\\theta})\\) requires numerical aid \\(\\frac{\\text{d}}{\\text{d}\\boldsymbol{\\theta}} \\ell(\\boldsymbol{\\theta})\\) closed-form solution. However, knew class membership observation, optimization problem collapse independent maximum likelihood estimation two Gaussian distributions, can solved analytically. observation motivates -called expectation-maximization (EM) algorithm (Dempster, Laird, Rubin 1977), iterates following steps: Initialize \\(\\boldsymbol{\\theta}\\) compute \\(\\ell(\\boldsymbol{\\theta})\\). Calculate posterior probabilities observation’s class membership, conditional \\(\\boldsymbol{\\theta}\\). Calculate maximum likelihood estimate \\(\\boldsymbol{\\bar{\\theta}}\\) conditional posterior probabilities step 2. Evaluate \\(\\ell(\\boldsymbol{\\bar{\\theta}})\\). Now stop likelihood improvement \\(\\ell(\\boldsymbol{\\bar{\\theta}}) - \\ell(\\boldsymbol{\\theta})\\) smaller threshold epsilon iteration limit iterlim reached. Otherwise, go back step 2. following function implements algorithm, compare standard numerical optimization .","code":"em <- function(normal_mixture_llk, theta, epsilon = 1e-08, iterlim = 1000, data) {   llk <- normal_mixture_llk(theta, data, neg = FALSE)   mu <- theta[1:2]   sd <- exp(theta[3:4])   lambda <- plogis(theta[5])   for (i in 1:iterlim) {     class_1 <- lambda * dnorm(data, mu[1], sd[1])     class_2 <- (1 - lambda) * dnorm(data, mu[2], sd[2])     posterior <- class_1 / (class_1 + class_2)     lambda <- mean(posterior)     mu[1] <- mean(posterior * data) / lambda     mu[2] <- (mean(data) - lambda * mu[1]) / (1 - lambda)     sd[1] <- sqrt(mean(posterior * (data - mu[1])^2) / lambda)     sd[2] <- sqrt(mean((1 - posterior) * (data - mu[2])^2) / (1 - lambda))     llk_old <- llk     theta <- c(mu, log(sd), qlogis(lambda))     llk <- normal_mixture_llk(theta, data, neg = FALSE)     if (is.na(llk)) stop(\"fail\")     if (llk - llk_old < epsilon) break   }   list(\"neg_llk\" = -llk, \"estimate\" = theta, \"iterations\" = i) }"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"setup","dir":"Articles","previous_headings":"Workflow","what":"Setup","title":"Introduction","text":"optimization problem specified Nop object called geyser, f function optimized (normal_mixture_llk), npar specifies length parameter vector f optimized (five case), data gives observation vector required likelihood function. Printing object provides specification overview: next step concerns specifying numerical optimizer via $set_optimizer() method. Remark: Numerical optimizers must specified unified framework provided {optimizeR} package (Oelschläger Ötting 2023). necessary priori consistency across optimization functions R regard function inputs outputs. make impossible allow arbitrary optimizers compare results, see {optimizeR} README file details. possible define numerical optimizer implemented R {optimizeR} framework. , select two popular ones, stats::nlm() stats::optim(): Remark: previous code chunk makes use technique called “method chaining” (see Wickham 2019, ch. 14.2.1). means geyser$set_optimizer() returns modified geyser object, can specify second optimizer calling $set_optimizer() . also want apply EM algorithm introduced : Finally, can validate specification:","code":"geyser <- Nop$new(   f = normal_mixture_llk,    npar = 5,    data = faithful$eruptions ) print(geyser) #> Optimization problem: #> - Function: normal_mixture_llk #> - Optimize over: theta (length 5)  #> - Additional arguments: data  #> Numerical optimizer: #> No optimizer specified yet. #> Optimization results: #> No results saved yet. #> geyser$   set_optimizer(optimizer_nlm(), label = \"nlm\")$   set_optimizer(optimizer_optim(), label = \"optim\") em_optimizer <- optimizeR::define_optimizer(   optimizer = em, objective = \"normal_mixture_llk\",   initial = \"theta\", value = \"neg_llk\", parameter = \"estimate\" ) geyser$set_optimizer(em_optimizer, label = \"em\") geyser$test(verbose = TRUE) #> ℹ Test configuration #> ✔ Function specified: normal_mixture_llk #> ✔ Target argument specified: theta (length 5) #> ✔ Test initial values specified: -0.84 1.6 0.33 -0.82 0.49 #> ℹ Test function call #> ✔ Test function call returned a <numeric>. #> ✔ Return value: 1656.7 #> ℹ Test optimization with `nlm` #> ✔ Test optimization returned a <list>. #> ✔ Return value: 421.42 #> ✔ Return parameter: 7 3.49 37.15 0.13 -23.35 #> ✔ Return seconds: 0.01 #> ℹ Test optimization with `optim` #> ✔ Test optimization returned a <list>. #> ✔ Return value: 277.34 #> ✔ Return parameter: 4.26 2 -0.83 -1.52 0.53 #> ✔ Return seconds: 0.02 #> ℹ Test optimization with `em` #> ✔ Test optimization returned a <list>. #> ✔ Return value: 276.36 #> ✔ Return parameter: 4.27 2.02 -0.83 -1.45 0.63 #> ✔ Return seconds: 0.04"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"function-evaluation","dir":"Articles","previous_headings":"Workflow","what":"Function evaluation","title":"Introduction","text":"Nop object specified, evaluating normal_mixture_llk value parameter vector theta simple $evaluate() method, example:","code":"geyser$evaluate(at = 1:5) #> [1] 1069.623"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"function-optimization","dir":"Articles","previous_headings":"Workflow","what":"Function optimization","title":"Introduction","text":"Optimization normal_mixture_llk possible $optimize() method, example: method arguments : initial = \"random\" random starting values drawn standard normal distribution, which_optimizer = \"nlm\" optimization specified stats::nlm optimizer, save_result = FALSE save optimization result inside geyser object (see ), return_results = TRUE directly return optimization result instead. return value list : value, optimum function value, parameter, parameter vector value obtained, seconds, estimation time seconds, initial, starting parameter vector optimization, gradient, code, iterations, outputs specific stats::nlm optimizer.","code":"geyser$optimize(initial = \"random\", which_optimizer = \"nlm\", save_result = FALSE, return_result = TRUE) #> $value #> [1] 421.417 #>  #> $parameter #> [1]  -0.6263152   3.4877817  -0.8353112   0.1303885 -23.1685784 #>  #> $seconds #> [1] 0.008099079 #>  #> $initial #> [1] -0.6264538  0.1836433 -0.8356286  1.5952808  0.3295078 #>  #> $gradient #> [1] 0.000000e+00 6.716353e-05 0.000000e+00 1.141416e-04 2.453470e-08 #>  #> $code #> [1] 1 #>  #> $iterations #> [1] 36"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"initialization-effect","dir":"Articles","previous_headings":"Workflow","what":"Initialization effect","title":"Introduction","text":"interested effect starting values optimization, .e., whether different initial values lead different results. therefore optimize likelihood function runs = 100 times different random starting points (initial = \"random\") compare identified optima: Note: label optimization results label = \"random\", useful later comparisons. set save_results = TRUE save optimization results inside geyser object (can use $optima(), $summary(), $plot() methods comparisons, see ). seed = 1 argument ensures reproducibility. $optima() method provides overview identified optima. , ignore decimal places setting digits = 0 sort optimum function value: 100 optimization runs 3 optimizers using random starting values led 24 different optima (minima case, minimized normal_mixture_llk()), 7 optimization runs failed. therefore can already deduce initial values huge impact optimization result. Looking overview optimizer-wise reveals stats::optim optimizer seems vulnerable local optima: two occurring optima 421 276 total frequencies 163 105, respectively. value 276 overall minimum (potentially global minimum), 421 significantly worse. compare parameter vectors led different values, can use $closest_parameter() method. saved optimization runs, extracts parameter vector corresponding optimum closest value. consider results nlm optimizer : two parameter vectors saved mle (shall maximum likelihood estimate) bad (clearly bad estimate). Two attributes show run id optimizer led parameters. understand values terms means, standard deviations, mixing proportion (.e., form \\(\\boldsymbol{\\theta} = (\\mu_1, \\mu_2, \\sigma_1, \\sigma_2, \\lambda)\\)), need transformation (see ): two estimates mle bad \\(\\boldsymbol{\\theta}\\) correspond following mixture densities:  mixture defined mle parameter fits much better bad, practically estimates single class. However, gradients points close zero, explains nlm optimizer terminates points:","code":"geyser$optimize(initial = \"random\", runs = 100, label = \"random\", save_results = TRUE, seed = 1) geyser$optima(digits = 0, sort_by = \"value\") #>    value frequency #> 1    276       105 #> 2    277         1 #> 3    283         1 #> 4    290         1 #> 5    294         1 #> 6    296         1 #> 7    316         1 #> 8    323         1 #> 9    355         1 #> 10   364         1 #> 11   368         1 #> 12   370         1 #> 13   372         1 #> 14   374         1 #> 15   389         1 #> 16   395         2 #> 17   397         1 #> 18   400         1 #> 19   402         1 #> 20   406         2 #> 21   415         1 #> 22   419         2 #> 23   420         1 #> 24   421       163 #> 25  <NA>         7 geyser$optima(digits = 0, sort_by = \"value\", which_optimizer = \"nlm\") #>   value frequency #> 1   276        19 #> 2   370         1 #> 3   406         1 #> 4   421        79 geyser$optima(digits = 0, sort_by = \"value\", which_optimizer = \"optim\") #>    value frequency #> 1    276         4 #> 2    277         1 #> 3    283         1 #> 4    290         1 #> 5    294         1 #> 6    296         1 #> 7    316         1 #> 8    323         1 #> 9    355         1 #> 10   364         1 #> 11   368         1 #> 12   372         1 #> 13   374         1 #> 14   389         1 #> 15   395         2 #> 16   400         1 #> 17   402         1 #> 18   406         1 #> 19   415         1 #> 20   419         2 #> 21   420         1 #> 22   421        74 geyser$optima(digits = 0, sort_by = \"value\", which_optimizer = \"em\") #>   value frequency #> 1   276        82 #> 2   397         1 #> 3   421        10 #> 4  <NA>         7 (mle <- geyser$closest_parameter(value = 276, which_optimizer = \"nlm\")) #> [1]  2.02  4.27 -1.45 -0.83 -0.63 #> attr(,\"run\") #> [1] 89 #> attr(,\"optimizer\") #> [1] \"nlm\" geyser$evaluate(at = as.vector(mle)) #> [1] 276.3699 mle_run <- attr(mle, \"run\") (bad <- geyser$closest_parameter(value = 421, which_optimizer = \"nlm\")) #> [1]  3.49  2.11  0.13 -0.09 17.49 #> attr(,\"run\") #> [1] 13 #> attr(,\"optimizer\") #> [1] \"nlm\" geyser$evaluate(at = as.vector(bad)) #> [1] 421.4176 bad_run <- attr(bad, \"run\") transform <- function(theta) c(theta[1:2], exp(theta[3:4]), plogis(theta[5])) (mle <- transform(mle)) #> [1] 2.0200000 4.2700000 0.2345703 0.4360493 0.3475105 (bad <- transform(bad)) #> [1] 3.4900000 2.1100000 1.1388284 0.9139312 1.0000000 mixture_density <- function (data, mu, sd, lambda) {   lambda * dnorm(data, mu[1], sd[1]) + (1 - lambda) * dnorm(data, mu[2], sd[2]) } ggplot(faithful, aes(x = eruptions)) +    geom_histogram(aes(y = after_stat(density)), bins = 30) +    labs(x = \"eruption time (min)\", colour = \"parameter\") +   stat_function(     fun = function(x) {       mixture_density(x, mu = mle[1:2], sd = mle[3:4], lambda = mle[5])     }, aes(color = \"mle\"), linewidth = 1   ) +   stat_function(     fun = function(x) {       mixture_density(x, mu = bad[1:2], sd = bad[3:4], lambda = bad[5])     }, aes(color = \"bad\"), linewidth = 1   ) geyser$results(which_run = c(mle_run, bad_run), which_optimizer = \"nlm\", which_element = \"gradient\") #> [[1]] #>     gradient1     gradient2     gradient3     gradient4     gradient5  #>  2.826051e-05 -8.066033e-08  7.162271e-06  4.604317e-06  6.532028e-07  #>  #> [[2]] #>     gradient1     gradient2     gradient3     gradient4     gradient5  #>  2.630258e-06 -1.495794e-07 -1.724342e-07  6.247092e-07  2.660272e-07"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"custom-sampler-for-initial-values","dir":"Articles","previous_headings":"Workflow","what":"Custom sampler for initial values","title":"Introduction","text":"Depending application magnitude parameters estimated, initial values drawn standard normal distribution (default behavior calling $optimize(initial = \"random\")) may good guess. can, however, easily modify distribution used draw initial values. example, next code snippet uses starting values drawn \\(\\mathcal{N}(\\mu = 2, \\sigma = 0.5)\\) distribution: obtain first results optimization runs, can use summary() method. Note setting which_run = \"custom_sampler\" allows filtering, benefit setting label calling $optimize(). obtain different optima (even ). contrast, runs lead presumably global optimum 276:","code":"sampler <- function() stats::rnorm(5, mean = 2, sd = 0.5) geyser$optimize(initial = sampler, runs = 100, label = \"custom_sampler\") summary(geyser, which_run = \"custom_sampler\", digits = 2) |>   head(n = 10) #>     value                        parameter #> 1  421.42   3.49, 2.11, 0.13, -0.16, 16.75 #> 2  421.42 3.49, -1.41, 0.13, -10.17, 16.53 #> 3  276.36  2.02, 4.27, -1.45, -0.83, -0.63 #> 4  276.36   4.27, 2.02, -0.83, -1.45, 0.63 #> 5  421.42    3.49, 5.54, 0.13, 1.79, 14.70 #> 6  276.36   4.27, 2.02, -0.83, -1.45, 0.63 #> 7  276.36   4.27, 2.02, -0.83, -1.45, 0.63 #> 8  405.72    4.33, 2.16, 0.06, -0.36, 0.70 #> 9  276.36   4.27, 2.02, -0.83, -1.45, 0.63 #> 10 276.36   4.27, 2.02, -0.83, -1.45, 0.63 geyser$optima(digits = 0, sort_by = \"value\", which_run = \"custom_sampler\") #>    value frequency #> 1    276       183 #> 2    277         1 #> 3    278         1 #> 4    283         1 #> 5    288         1 #> 6    289         1 #> 7    291         1 #> 8    292         1 #> 9    295         1 #> 10   297         1 #> 11   303         1 #> 12   314         1 #> 13   316         1 #> 14   317         1 #> 15   320         1 #> 16   321         1 #> 17   329         1 #> 18   331         1 #> 19   333         1 #> 20   335         1 #> 21   337         1 #> 22   338         1 #> 23   339         1 #> 24   344         1 #> 25   347         1 #> 26   351         1 #> 27   352         1 #> 28   362         1 #> 29   368         1 #> 30   376         1 #> 31   377         1 #> 32   380         1 #> 33   390         3 #> 34   395         1 #> 35   397         1 #> 36   398         1 #> 37   401         1 #> 38   402         1 #> 39   405         1 #> 40   406         2 #> 41   407         1 #> 42   409         2 #> 43   411         3 #> 44   415         1 #> 45   416         2 #> 46   417         1 #> 47   419         1 #> 48   421        64"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"educated-guesses","dir":"Articles","previous_headings":"Workflow","what":"Educated guesses","title":"Introduction","text":"Next make “educated guesses” starting values probably close global optimum. Based histogram , means two normal distributions may somewhere around 2 4. use sets starting values means lower larger 2 4, respectively. variances, set starting values close 1 (note use log transformation since restrict standard deviations positive using exp() log-likelihood function). starting value mixing proportion shall around 0.5. leads following 32 combinations starting values: $optimize() method, instead initial = \"random\", can set initial numeric vector length npar, , convenience, list vectors, like starting_values: “educated guesses” lead way stable optimization: comparison, consider set implausible starting values, leads local optima:","code":"mu_1 <- c(1.7, 2.3) mu_2 <- c(4.3, 3.7) sd_1 <- sd_2 <- c(log(0.8), log(1.2)) lambda <- c(qlogis(0.4), qlogis(0.6)) starting_values <- asplit(expand.grid(mu_1, mu_2, sd_1, sd_2, lambda), MARGIN = 1) geyser$optimize(initial = starting_values, label = \"educated_guess\") geyser$optima(digits = 0, which_run = \"educated_guess\") #>   value frequency #> 1   276        95 #> 2   277         1 geyser$optimize(initial = rep(0, 5), label = \"bad_guess\") summary(geyser, which_run = \"bad_guess\")  #>    value                       parameter #> 1 421.42    3.49, 3.49, 0.13, 0.13, 0.00 #> 2 384.78 1.84, 3.64, -2.92, -0.03, -3.00 #> 3 421.42    3.49, 3.49, 0.13, 0.13, 0.00"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"standardizing-the-optimization-problem","dir":"Articles","previous_headings":"Workflow","what":"Standardizing the optimization problem","title":"Introduction","text":"situations, possible consider standardized version optimization problem, potentially improve performance numerical optimizer. example, can standardize data running optimization via $standardize() method: optimize likelihood using standardized data set, use $optmize(), default uses random starting values. , compare results obtained original optimization problem. usage $reset_argument(\"data\") important: perform optimization runs applied standardized initialization, undo standardization data obtain original data set. use $reset_argument(), optimization runs carried standardized data set.","code":"geyser$standardize(\"data\") str(geyser$get_argument(\"data\")) #>  num [1:272] 0.0983 -1.4787 -0.1356 -1.0556 0.9158 ... geyser$   optimize(runs = 100, label = \"data_standardized\")$   reset_argument(\"data\")"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"reducing-the-optimization-problem","dir":"Articles","previous_headings":"Workflow","what":"Reducing the optimization problem","title":"Introduction","text":"situations, possible first optimize sub-problem use results initialization full optimization problem. example, context likelihood maximization, data set considered shows complex structures large, numerical optimization may become computationally costly. cases, can beneficial initially consider reduced data set. following application $reduce() method transforms \"data\" selecting proportion 30% data points random: Similar standardizing , calling $optimize() now optimizes reduced data set: , use $reset_argument(\"data\") obtain original data set. $continue() method now optimizes whole data set using estimates obtained reduced data initial values. addition selecting sub samples random (= \"random\"), four options exist via specifying argument : \"first\" selects top data points, \"last\" selects last data points, \"similar selects similar data points based k-means clustering, \"dissimilar\" similar \"similar\" selects dissimilar data points. See two vignettes demonstrations options.","code":"geyser$reduce(argument_name = \"data\", how = \"random\", prop = 0.3, seed = 1) str(geyser$get_argument(\"data\")) #>  num [1:82] 4.2 1.75 4.25 1.75 3.45 ... geyser$   optimize(runs = 100, label = \"data_subset\")$   reset_argument(\"data\")$   continue()"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"optimization-times","dir":"Articles","previous_headings":"Workflow","what":"Optimization times","title":"Introduction","text":"$plot() method provides overview optimization times. Setting = \"label\" allows comparison across initialization strategies, setting relative = TRUE plots relative differences median top boxplot:  Setting = \"optimizer\" allows comparison across optimizers:","code":"geyser$plot(by = \"label\", relative = TRUE) geyser$plot(by = \"optimizer\", relative = FALSE)"},{"path":"https://loelschlaeger.de/ino/articles/introduction.html","id":"the-global-optimum","dir":"Articles","previous_headings":"Workflow","what":"The global optimum","title":"Introduction","text":"best optimization result can extracted via: best function value 248.98 unique: Furthermore, produce two-class mixture, since one class variance practically zero, see output geyser$best_parameter(). can therefore delete result Nop object: final Nop object looks follows:","code":"geyser$best_value() #> [1] 248.98 #> attr(,\"run\") #> [1] 421 #> attr(,\"optimizer\") #> [1] \"em\" geyser$best_parameter() #> [1]   3.53   1.75   0.11 -32.71   3.79 #> attr(,\"run\") #> [1] 421 #> attr(,\"optimizer\") #> [1] \"em\" head(geyser$optima(digits = 0, sort_by = \"value\")) #>   value frequency #> 1   249         1 #> 2   276       514 #> 3   277         4 #> 4   278         1 #> 5   283         2 #> 6   288         1 geyser$clear(which_run = attr(geyser$best_value(), \"run\")) print(geyser) #> Optimization problem: #> - Function: normal_mixture_llk #> - Optimize over: theta (length 5)  #> - Additional arguments: data  #> Numerical optimizer: #> - 1: nlm  #> - 2: optim  #> - 3: em  #> Optimization results: #> - Total runs (comparable): 433 (332) #> - Best parameter: 2.02 4.27 -1.45 -0.83 -0.63 #> - Best value: 276.36"},{"path":[]},{"path":"https://loelschlaeger.de/ino/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer. Marius Ötting. Author. Dietmar Bauer. Author.","code":""},{"path":"https://loelschlaeger.de/ino/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oelschläger L, Ötting M, Bauer D (2023). ino: Initialization Numerical Optimization. R package version 0.2.0.9000, https://github.com/loelschlaeger/ino.","code":"@Manual{,   title = {ino: Initialization of Numerical Optimization},   author = {Lennart Oelschläger and Marius Ötting and Dietmar Bauer},   year = {2023},   note = {R package version 0.2.0.9000},   url = {https://github.com/loelschlaeger/ino}, }"},{"path":"https://loelschlaeger.de/ino/index.html","id":"initialization-of-numerical-optimization-","dir":"","previous_headings":"","what":"Initialization of Numerical Optimization","title":"Initialization of Numerical Optimization","text":"ino R package provides tools designed analysis initialization numerical optimization. detailed examples usage instructions, please refer vignettes accompanying package.","code":""},{"path":"https://loelschlaeger.de/ino/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Initialization of Numerical Optimization","text":"can install released version CRAN : development version GitHub :","code":"install.packages(\"ino\") # install.packages(\"devtools\") devtools::install_github(\"loelschlaeger/ino\")"},{"path":"https://loelschlaeger.de/ino/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Initialization of Numerical Optimization","text":"Ackley function multiple local minima one global minimum origin. optimization result depends initial value:","code":"library(\"ino\") Nop$new(f = f_ackley, npar = 2)$   set_optimizer(optimizer_nlm())$   optimize(initial = \"random\", runs = 100, verbose = FALSE)$   optima() #>   value frequency #> 1     0        39 #> 2  2.58        34 #> 3  3.57        12 #> 4  5.38         6 #> 5  4.88         5 #> 6  6.56         2 #> 7  6.88         2"},{"path":"https://loelschlaeger.de/ino/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Initialization of Numerical Optimization","text":"question, found bug, request feature, want contribute? Please file issue.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":null,"dir":"Reference","previous_headings":"","what":"Nop Object (R6 Class) — Nop","title":"Nop Object (R6 Class) — Nop","text":"Nop object defines Numerical Optimization Problem.","code":""},{"path":[]},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"step-create-a-new-nop-object-","dir":"Reference","previous_headings":"","what":"Step 1: Create a new Nop object:","title":"Nop Object (R6 Class) — Nop","text":"Call object <- Nop$new(f, npar, ...) f function optimized first argument, npar length first argument f, ... additional arguments f.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"step-specify-numerical-optimizer-","dir":"Reference","previous_headings":"","what":"Step 2: Specify numerical optimizer:","title":"Nop Object (R6 Class) — Nop","text":"Call object$set_optimizer(<optimizer object>), <optimizer object> object class optimizer, can created define_optimizer function {optimizeR} package. Two optimizer objects already available: optimizer_nlm optimizer_optim","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"step-test-the-configuration","dir":"Reference","previous_headings":"","what":"Step 3: Test the configuration","title":"Nop Object (R6 Class) — Nop","text":"Call object$test() validate configuration. overview configuration yields $print() method.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"optimization","dir":"Reference","previous_headings":"","what":"Optimization","title":"Nop Object (R6 Class) — Nop","text":"Call object$evaluate() evaluate target function point. Call object$optimize() optimization. See also methods object$standardize(), object$reduce(), object$continue() initialization strategies.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"analysis-of-the-results","dir":"Reference","previous_headings":"","what":"Analysis of the results","title":"Nop Object (R6 Class) — Nop","text":"following methods analysis optimization results, different filter options optimization runs, optimizers, elements: $results() returns saved optimization results, $summary() summarizes results, $optima() returns frequency table identified optima, $plot() visualizes optimization time value, $best_parameter() returns parameter vector optimum value obtained, $best_value() returns found optimum value f, $closest_parameter() returns parameter closest specified value.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Nop Object (R6 Class) — Nop","text":"f function optimized. f_name name function optimized. f_target name target argument, .e., argument f optimized. npar length target argument, .e., argument f optimized. arguments list specified additional arguments f. true_value true numeric optimum value f (available). true_parameter true optimum numeric parameter vector length npar (available), .e., point f obtains optimum. minimized logical, set TRUE (default) show best minimum $best_value(), $best_parameter(), $optima(). optimizer list specified optimizers. new_label character, new optimization label used yet.","code":""},{"path":[]},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Nop Object (R6 Class) — Nop","text":"Nop$new() Nop$print() Nop$set_argument() Nop$get_argument() Nop$remove_argument() Nop$set_optimizer() Nop$remove_optimizer() Nop$evaluate() Nop$optimize() Nop$test() Nop$standardize() Nop$reduce() Nop$reset_argument() Nop$continue() Nop$results() Nop$number_runs() Nop$elements_available() Nop$clear() Nop$summary() Nop$optima() Nop$plot() Nop$best_value() Nop$best_parameter() Nop$closest_parameter() Nop$clone()","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Nop Object (R6 Class) — Nop","text":"Creates new Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$new(f, npar, ...)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"f function optimized. optimized first argument, numeric vector length npar. npar integer, length first argument f (argument f optimized). ... Optionally additional named arguments f.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"new Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Nop Object (R6 Class) — Nop","text":"Prints details numerical optimization problem.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$print(digits = getOption(\"ino_digits\", default = 2), ...)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"digits integer, number shown decimal places. default 2. ... Currently used.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-set-argument-","dir":"Reference","previous_headings":"","what":"Method set_argument()","title":"Nop Object (R6 Class) — Nop","text":"Sets additional arguments f.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$set_argument(...)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"... Optionally additional named arguments f.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-get-argument-","dir":"Reference","previous_headings":"","what":"Method get_argument()","title":"Nop Object (R6 Class) — Nop","text":"Gets argument value f.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$get_argument(argument_name)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"argument_name character, argument extract.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"argument.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-remove-argument-","dir":"Reference","previous_headings":"","what":"Method remove_argument()","title":"Nop Object (R6 Class) — Nop","text":"Removes additional argument f.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$remove_argument(argument_name)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"argument_name character, argument remove.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-set-optimizer-","dir":"Reference","previous_headings":"","what":"Method set_optimizer()","title":"Nop Object (R6 Class) — Nop","text":"Sets numerical optimizer.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$set_optimizer(optimizer, label = NULL)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"optimizer object class optimizer, can created define_optimizer function {optimizeR} package. label character, unique label optimizer. default label = NULL, case default label saved inside optimizer used.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-remove-optimizer-","dir":"Reference","previous_headings":"","what":"Method remove_optimizer()","title":"Nop Object (R6 Class) — Nop","text":"Removes numerical optimizer.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$remove_optimizer(which_optimizer)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output).","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-evaluate-","dir":"Reference","previous_headings":"","what":"Method evaluate()","title":"Nop Object (R6 Class) — Nop","text":"Evaluates function.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$evaluate(at = rnorm(self$npar), time_limit = NULL, hide_warnings = FALSE)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"numeric vector length npar, point function evaluated. Per default, = rnorm(self$npar), .e., random values drawn standard normal distribution. time_limit integer, time limit seconds computations. time limit time_limit = NULL (default). currently works reliably Windows. hide_warnings logical. Set TRUE (FALSE) hide (show) warning messages.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Either: numeric value, function value , \"time limit reached\" time limit reached, error message evaluation failed.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-optimize-","dir":"Reference","previous_headings":"","what":"Method optimize()","title":"Nop Object (R6 Class) — Nop","text":"Optimizes function.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$optimize(   initial = \"random\",   runs = 1,   which_optimizer = \"all\",   seed = NULL,   return_results = FALSE,   save_results = TRUE,   label = self$new_label,   ncores = getOption(\"ino_ncores\", default = 1),   verbose = getOption(\"ino_verbose\", default = TRUE),   simplify = TRUE,   time_limit = NULL,   hide_warnings = TRUE )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"initial Specify initial point optimizer start. Either: character \"random\" (default) random initial values drawn standard normal distribution, numeric vector length npar, starting point optimization, list vectors (case, runs set length list), function without arguments returns numeric vector length npar. cases, initial values used optimizer. flexibility, funtion initial can two arguments, first argument specifies optimization run, second argument specifies optimizer. runs integer, number optimization runs. default, runs = 1. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). seed integer, passed set.seed reproducibility. Can NULL seed, default. return_results logical, indicates whether optimization results returned list. default, return_results = FALSE. save_results logical, indicates whether optimization results saved inside Nop object. default, save_results = TRUE. label relevant save_results = TRUE. case, optional character specify custom label optimization. default, label = self$new_label creates new label. Labels can useful distinguish optimization runs later. ncores integer, number CPU cores parallel computation. default 1. can use parallel::detectCores() detect number available CPU cores. verbose logical, indicates whether progress/details printed. Set TRUE (FALSE) print (hide) messages. default TRUE. simplify relevant return_results = TRUE runs = 1 /one optimizer specified. case, simplify = TRUE, nested list output optimization results flattened possible. time_limit integer, time limit seconds computations. time limit time_limit = NULL (default). currently works reliably Windows. hide_warnings logical. Set TRUE (FALSE) hide (show) warning messages.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"return value depends value return_results: return_results = FALSE, invisibly Nop object, return_results = TRUE, nested list optimization results. element corresponds one optimization run list results optimizer. results optimizer list, output apply_optimizer. simplify = TRUE, output flattened possible.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-test-","dir":"Reference","previous_headings":"","what":"Method test()","title":"Nop Object (R6 Class) — Nop","text":"Validates configuration Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$test(   at = rnorm(self$npar),   which_optimizer = \"active\",   time_limit = 10,   verbose = getOption(\"ino_verbose\", default = TRUE),   digits = getOption(\"ino_digits\", default = 2) )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"numeric length npar, point function f specified optimizer tested. Per default, = rnorm(self$npar), .e., random values drawn standard normal distribution. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). time_limit integer, time limit seconds computations. time limit time_limit = NULL (default). currently works reliably Windows. verbose logical, indicates whether progress/details printed. Set TRUE (FALSE) print (hide) messages. default TRUE. digits integer, number shown decimal places. default 2.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly TRUE tests successful.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-standardize-","dir":"Reference","previous_headings":"","what":"Method standardize()","title":"Nop Object (R6 Class) — Nop","text":"Standardizes optimization problem.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$standardize(   argument_name,   by_column = TRUE,   center = TRUE,   scale = TRUE,   ignore = integer(),   verbose = getOption(\"ino_verbose\", default = TRUE) )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"argument_name character, name argument f standardized. argument must numeric vector, matrix, data.frame. by_column relevant argument argument_name matrix data.frame. case, either TRUE standardize column-wise (default) FALSE standardize row-wise. Currently, by_column = TRUE implemented. center Passed scale. Default TRUE. scale Passed scale. Default TRUE. ignore integer (vector) column indices (row indices by_column = FALSE) standardize. verbose logical, indicates whether progress/details printed. Set TRUE (FALSE) print (hide) messages. default TRUE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-reduce-","dir":"Reference","previous_headings":"","what":"Method reduce()","title":"Nop Object (R6 Class) — Nop","text":"Reduces optimization problem.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$reduce(   argument_name,   by_row = TRUE,   how = \"random\",   proportion = 0.5,   centers = 2,   ignore = integer(),   seed = NULL,   verbose = getOption(\"ino_verbose\", default = TRUE) )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"argument_name character, name argument f reduced. by_row relevant argument argument_name matrix data.frame. case, either TRUE reduce row-wise (default) FALSE reduce column-wise. Currently, by_row = TRUE implemented. character, specifying reduce. Can one : \"random\" (default), reduce random \"first\", reduce first elements \"last\", reduce last elements \"similar\", reduce similar elements \"dissimilar\", reduce dissimilar elements Note \"similar\" \"dissimilar\" based k-means clustering via kmeans. apply options, argument argument_name must numeric. proportion numeric 0 1, specifying reduction proportion. default, proportion = 0.5. centers relevant, = \"(dis)similar\". case, passed kmeans. default, centers = 2. ignore relevant, = \"(dis)similar\". case integer (vector) row indices (column indices by_row = FALSE) ignore clustering. seed integer, passed set.seed reproducibility. Can NULL seed, default. verbose logical, indicates whether progress/details printed. Set TRUE (FALSE) print (hide) messages. default TRUE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-reset-argument-","dir":"Reference","previous_headings":"","what":"Method reset_argument()","title":"Nop Object (R6 Class) — Nop","text":"Resets additional argument f transformation $standardize() $reduce().","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$reset_argument(   argument_name,   verbose = getOption(\"ino_verbose\", default = TRUE) )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"argument_name character, name argument reset. verbose logical, indicates whether progress/details printed. Set TRUE (FALSE) print (hide) messages. default TRUE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-continue-","dir":"Reference","previous_headings":"","what":"Method continue()","title":"Nop Object (R6 Class) — Nop","text":"Continues optimization runs, e.g., transformed parameter.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$continue(   which_run = \"last\",   which_optimizer = \"active\",   seed = NULL,   return_results = FALSE,   save_results = TRUE,   ncores = getOption(\"ino_ncores\", default = 1),   verbose = getOption(\"ino_verbose\", default = TRUE),   simplify = TRUE,   time_limit = NULL,   hide_warnings = TRUE )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). seed integer, passed set.seed reproducibility. Can NULL seed, default. return_results logical, indicates whether optimization results returned list. default, return_results = FALSE. save_results logical, indicates whether optimization results saved inside Nop object. default, save_results = TRUE. ncores integer, number CPU cores parallel computation. default 1. can use parallel::detectCores() detect number available CPU cores. verbose logical, indicates whether progress/details printed. Set TRUE (FALSE) print (hide) messages. default TRUE. simplify relevant return_results = TRUE runs = 1 /one optimizer specified. case, simplify = TRUE, nested list output optimization results flattened possible. time_limit integer, time limit seconds computations. time limit time_limit = NULL (default). currently works reliably Windows. hide_warnings logical. Set TRUE (FALSE) hide (show) warning messages.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"return value $optimize().","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-results-","dir":"Reference","previous_headings":"","what":"Method results()","title":"Nop Object (R6 Class) — Nop","text":"Returns saved optimization results.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$results(   which_run = \"all\",   which_optimizer = \"all\",   which_element = \"all\",   only_comparable = FALSE,   simplify = TRUE )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). which_element Select elements saved optimization results. See $elements_available() names available elements. Either: \"\", elements, \"basic\", elements \"value\", numeric value found optimum, \"parameter\", parameter vector optimum value obtained, \"default\", elements saved optimization runs default, .e. \"run\", run id, \"optimizer\", label optimizer, \"value\" \"parameter\" (see ), \"seconds\", optimization time seconds, \"label\", label optimization run, character (vector), names specific elements optimization output. only_comparable Either TRUE show comparable results (.e., results obtained original optimization problem), FALSE include optimization results. simplify relevant return_results = TRUE runs = 1 /one optimizer specified. case, simplify = TRUE, nested list output optimization results flattened possible.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"nested list optimization results. element corresponds one optimization run list results optimizer. simplify = TRUE, output flattened possible.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-number-runs-","dir":"Reference","previous_headings":"","what":"Method number_runs()","title":"Nop Object (R6 Class) — Nop","text":"Returns number saved optimization runs.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$number_runs(   which_run = \"all\",   which_optimizer = \"all\",   only_comparable = FALSE )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). only_comparable Either TRUE show comparable results (.e., results obtained original optimization problem), FALSE include optimization results.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"integer.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-elements-available-","dir":"Reference","previous_headings":"","what":"Method elements_available()","title":"Nop Object (R6 Class) — Nop","text":"Returns names available elements per optimizer.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$elements_available(which_optimizer = \"all\")"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output).","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"list.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method clear()","title":"Nop Object (R6 Class) — Nop","text":"Deletes optimization results.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$clear(which_run, which_optimizer = \"all\", which_element = \"all\")"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). which_element Select elements saved optimization results. See $elements_available() names available elements. Either: \"\", elements, \"basic\", elements \"value\", numeric value found optimum, \"parameter\", parameter vector optimum value obtained, \"default\", elements saved optimization runs default, .e. \"run\", run id, \"optimizer\", label optimizer, \"value\" \"parameter\" (see ), \"seconds\", optimization time seconds, \"label\", label optimization run, character (vector), names specific elements optimization output.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"Invisibly Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"Nop Object (R6 Class) — Nop","text":"Provides overview optimization runs.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$summary(   which_element = \"basic\",   which_run = \"all\",   which_optimizer = \"all\",   digits = getOption(\"ino_digits\", default = 2),   only_comparable = FALSE,   ... )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_element Select elements saved optimization results. See $elements_available() names available elements. Either: \"\", elements, \"basic\", elements \"value\", numeric value found optimum, \"parameter\", parameter vector optimum value obtained, \"default\", elements saved optimization runs default, .e. \"run\", run id, \"optimizer\", label optimizer, \"value\" \"parameter\" (see ), \"seconds\", optimization time seconds, \"label\", label optimization run, character (vector), names specific elements optimization output. which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). digits integer, number shown decimal places. default 2. only_comparable Either TRUE show comparable results (.e., results obtained original optimization problem), FALSE include optimization results. ... Optionally named expressions elements. See $elements_available() names available elements. addition, \"true_value\", \"true_parameter\", \"best_value\", \"best_parameter\" can accessed example, add distance = \"sqrt(sum((parameter - true_parameter) ^ 2))\" euclidean distance estimated true parameter vector.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"data.frame optimization results.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-optima-","dir":"Reference","previous_headings":"","what":"Method optima()","title":"Nop Object (R6 Class) — Nop","text":"Provides overview identified optimum values.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$optima(   digits = getOption(\"ino_digits\", default = 2),   sort_by = \"frequency\",   which_run = \"all\",   which_optimizer = \"all\",   only_comparable = TRUE )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"digits integer, number shown decimal places. default 2. sort_by Either: \"frequency\" (default) sort rows frequency, \"value\" sort value. which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). only_comparable Either TRUE show comparable results (.e., results obtained original optimization problem), FALSE include optimization results.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"data.frame.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Nop Object (R6 Class) — Nop","text":"Visualizes optimization time value.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$plot(   which_element = \"seconds\",   by = NULL,   relative = FALSE,   which_run = \"all\",   which_optimizer = \"all\",   only_comparable = FALSE,   title = paste(\"Optimization of\", x$f_name),   xlim = c(NA, NA) )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_element Either: \"seconds\" plot optimization times (default) \"value\" plot optimization values Either: \"label\" group optimization label \"optimizer\" group optimizer NULL group (default) relative which_element = \"seconds\". case, set TRUE plot relative time differences respect overall median. which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). only_comparable Either TRUE show comparable results (.e., results obtained original optimization problem), FALSE include optimization results. title character, plot title. xlim Passed coord_cartesian.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"ggplot object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-best-value-","dir":"Reference","previous_headings":"","what":"Method best_value()","title":"Nop Object (R6 Class) — Nop","text":"Returns best found numeric value f.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$best_value(   which_run = \"all\",   which_optimizer = \"all\",   only_comparable = TRUE,   digits = getOption(\"ino_digits\", default = 2) )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). only_comparable Either TRUE show comparable results (.e., results obtained original optimization problem), FALSE include optimization results. digits integer, number shown decimal places. default 2.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"numeric, best found numeric value f. output two attributes: run, run id led best value, optimizer, optimizer led best value. case multiple optimization runs led best value, first one returned.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-best-parameter-","dir":"Reference","previous_headings":"","what":"Method best_parameter()","title":"Nop Object (R6 Class) — Nop","text":"Returns best found numeric parameter vector.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$best_parameter(   which_run = \"all\",   which_optimizer = \"all\",   only_comparable = TRUE,   digits = getOption(\"ino_digits\", default = 2) )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). only_comparable Either TRUE show comparable results (.e., results obtained original optimization problem), FALSE include optimization results. digits integer, number shown decimal places. default 2.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"numeric length self$npar. output two attributes: run, run id led best parameter vector, optimizer, optimizer led best parameter vector. Note parameter vector necessarily unique.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-closest-parameter-","dir":"Reference","previous_headings":"","what":"Method closest_parameter()","title":"Nop Object (R6 Class) — Nop","text":"Extracts parameter vector led function value closest (absolute value) value. Note parameter vector necessarily unique.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$closest_parameter(   value,   which_run = \"all\",   which_optimizer = \"all\",   only_comparable = TRUE,   digits = getOption(\"ino_digits\", default = 2) )"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"value single numeric. which_run Select saved results optimization runs. Either: \"\", results, \"last\", results last optimization, \"failed\", results failed optimization runs, character (vector) labels specified $optimize(), numeric (vector) run ids. which_optimizer Select specified numerical optimizers. Either: \"\", specified optimizers, \"removed\", removed optimizers, \"active\", active optimizers (.e., removed), character (vector) specified optimizer labels, numeric (vector) optimizer ids (see $print() output). only_comparable Either TRUE show comparable results (.e., results obtained original optimization problem), FALSE include optimization results. digits integer, number shown decimal places. default 2.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Nop Object (R6 Class) — Nop","text":"numeric vector length self$npar. output two attributes: run, run id led parameter vector, optimizer, optimizer led parameter vector.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Nop Object (R6 Class) — Nop","text":"objects class cloneable method.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$clone(deep = FALSE)"},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nop Object (R6 Class) — Nop","text":"deep Whether make deep clone.","code":""},{"path":"https://loelschlaeger.de/ino/reference/Nop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nop Object (R6 Class) — Nop","text":"","code":"Nop$new(f = f_ackley, npar = 2)$   set_optimizer(optimizer_nlm())$   optimize(runs = 100, verbose = FALSE)$   optima() #>   value frequency #> 1     0        39 #> 2  2.58        34 #> 3  3.57        12 #> 4  5.38         6 #> 5  4.88         5 #> 6  6.56         2 #> 7  6.88         2"},{"path":"https://loelschlaeger.de/ino/reference/build_initial.html","id":null,"dir":"Reference","previous_headings":"","what":"Unified function call for initial parameter specifications — build_initial","title":"Unified function call for initial parameter specifications — build_initial","text":"helper function turns various formats initial parameter specifications unified function call.","code":""},{"path":"https://loelschlaeger.de/ino/reference/build_initial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unified function call for initial parameter specifications — build_initial","text":"","code":"build_initial(initial, npar)"},{"path":"https://loelschlaeger.de/ino/reference/build_initial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unified function call for initial parameter specifications — build_initial","text":"initial, npar See documentation method $optimize() Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/build_initial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unified function call for initial parameter specifications — build_initial","text":"function returns numeric length npar. function two integer arguments: run_id, selects run, optimizer_id, selects optimizer.","code":""},{"path":"https://loelschlaeger.de/ino/reference/build_initial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unified function call for initial parameter specifications — build_initial","text":"","code":"if (FALSE) { build_initial(\"random\", 2)(1, 1) build_initial(1:3, 3)(1, 2) build_initial(list(1:3, 2:4), 3)(2, 1) build_initial(function() stats::rnorm(4), 4)(3, 1) build_initial(function(run, optimizer) c(run, optimizer), 2)(2, 3) }"},{"path":"https://loelschlaeger.de/ino/reference/earthquakes.html","id":null,"dir":"Reference","previous_headings":"","what":"Earthquake data — earthquakes","title":"Earthquake data — earthquakes","text":"data set includes number yearly measured earthquakes 1900 2006.","code":""},{"path":"https://loelschlaeger.de/ino/reference/earthquakes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Earthquake data — earthquakes","text":"","code":"data(earthquakes)"},{"path":"https://loelschlaeger.de/ino/reference/earthquakes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Earthquake data — earthquakes","text":"data.frame two integer columns, year year obs number measured earthquakes.","code":""},{"path":"https://loelschlaeger.de/ino/reference/earthquakes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Earthquake data — earthquakes","text":"data obtained http://hmms--time-series.de/second/data/earthquakes.txt 2022-03-25.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ackley.html","id":null,"dir":"Reference","previous_headings":"","what":"Ackley function — f_ackley","title":"Ackley function — f_ackley","text":"Ackley function","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ackley.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ackley function — f_ackley","text":"","code":"f_ackley(x)"},{"path":"https://loelschlaeger.de/ino/reference/f_ackley.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ackley function — f_ackley","text":"x numeric vector length 2.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ackley.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ackley function — f_ackley","text":"function value x, single numeric.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ackley.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ackley function — f_ackley","text":"function multiple local minima one global minimum origin.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ackley.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ackley function — f_ackley","text":"https://en.wikipedia.org/wiki/Ackley_function","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ackley.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ackley function — f_ackley","text":"","code":"f_ackley(c(0, 0)) #> [1] 0"},{"path":"https://loelschlaeger.de/ino/reference/f_beale.html","id":null,"dir":"Reference","previous_headings":"","what":"Beale function — f_beale","title":"Beale function — f_beale","text":"Beale function","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_beale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beale function — f_beale","text":"","code":"f_beale(x)"},{"path":"https://loelschlaeger.de/ino/reference/f_beale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beale function — f_beale","text":"x numeric vector length 2.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_beale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beale function — f_beale","text":"function value x, single numeric.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_beale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Beale function — f_beale","text":"function multiple local minima one global minimum (3, 0.5).","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_beale.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beale function — f_beale","text":"https://en.wikipedia.org/wiki/Test_functions_for_optimization","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_beale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beale function — f_beale","text":"","code":"f_beale(c(3, 0.5)) #> [1] 0"},{"path":"https://loelschlaeger.de/ino/reference/f_easom.html","id":null,"dir":"Reference","previous_headings":"","what":"Easom function — f_easom","title":"Easom function — f_easom","text":"Easom function","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_easom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easom function — f_easom","text":"","code":"f_easom(x)"},{"path":"https://loelschlaeger.de/ino/reference/f_easom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easom function — f_easom","text":"x numeric vector length 2.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_easom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easom function — f_easom","text":"function value x, single numeric.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_easom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Easom function — f_easom","text":"function multiple local minima one global minimum (pi, pi).","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_easom.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Easom function — f_easom","text":"https://en.wikipedia.org/wiki/Test_functions_for_optimization","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_easom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easom function — f_easom","text":"","code":"f_easom(c(pi, pi)) #> [1] -1"},{"path":"https://loelschlaeger.de/ino/reference/f_ll_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-likelihood function of a Gaussian-hidden Markov model — f_ll_hmm","title":"Log-likelihood function of a Gaussian-hidden Markov model — f_ll_hmm","text":"Log-likelihood function Gaussian-hidden Markov model","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ll_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-likelihood function of a Gaussian-hidden Markov model — f_ll_hmm","text":"","code":"f_ll_hmm(theta, data, N, neg = FALSE)"},{"path":"https://loelschlaeger.de/ino/reference/f_ll_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-likelihood function of a Gaussian-hidden Markov model — f_ll_hmm","text":"theta numeric vector model parameters. first N*(N-1) elements logarithms non-diagonal elements transition probability matrix. next N elements mean values state-dependent normal distributions. last N elements logarithms standard deviations state-dependent normal distributions. data numeric vector, time series data. N integer, number states. neg Set TRUE return negative log-likelihood value.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ll_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-likelihood function of a Gaussian-hidden Markov model — f_ll_hmm","text":"numeric, log-likelihood value theta.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ll_hmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Log-likelihood function of a Gaussian-hidden Markov model — f_ll_hmm","text":"https://en.wikipedia.org/wiki/Hidden_Markov_model","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ll_hmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-likelihood function of a Gaussian-hidden Markov model — f_ll_hmm","text":"","code":"theta <- c(-1, -1, -2, 2, 0.5, 0.5) data <- sim_hmm(T = 1000, N = 2, theta = theta) f_ll_hmm(theta = theta, data = data, N = 2) #> [1] -2278.964 # \\donttest{ nlm(f_ll_hmm, p = theta, data = data, N = 2, neg = TRUE)$estimate #> Warning: NA/Inf replaced by maximum positive value #> [1] -0.8295929 -1.0619608 -1.7896455  2.1832781  0.5091347  0.4173019 # }"},{"path":"https://loelschlaeger.de/ino/reference/f_ll_mnp.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-likelihood function of the (normally mixed) multinomial probit model — f_ll_mnp","title":"Log-likelihood function of the (normally mixed) multinomial probit model — f_ll_mnp","text":"Log-likelihood function (normally mixed) multinomial probit model","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ll_mnp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-likelihood function of the (normally mixed) multinomial probit model — f_ll_mnp","text":"","code":"f_ll_mnp(theta, data, neg = FALSE, normal_cdf = mvtnorm::pmvnorm)"},{"path":"https://loelschlaeger.de/ino/reference/f_ll_mnp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-likelihood function of the (normally mixed) multinomial probit model — f_ll_mnp","text":"theta numeric, vector model coefficients, see details. data data.frame, output sim_mnp. neg Set TRUE return negative log-likelihood value. normal_cdf function evaluates CDF n-variate normal distribution. must take arguments lower, vector lower limits length n, upper, vector upper limits length n, mean, mean vector length n, sigma, n times n covariance matrix, return single numeric.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ll_mnp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-likelihood function of the (normally mixed) multinomial probit model — f_ll_mnp","text":"numeric, log-likelihood value theta.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ll_mnp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-likelihood function of the (normally mixed) multinomial probit model — f_ll_mnp","text":"order theta supposed c(b,o,l), b denotes vector mean effects without first entry, o lower-triangular elements lower-triangular Cholesky root effect covariance matrix Omega (), l lower-triangular elements lower-triangular Cholesky root L differenced (respect last alternative) error term covariance matrix Sigma.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_ll_mnp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Log-likelihood function of the (normally mixed) multinomial probit model — f_ll_mnp","text":"https://en.wikipedia.org/wiki/Multinomial_probit","code":""},{"path":[]},{"path":"https://loelschlaeger.de/ino/reference/f_ll_mnp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-likelihood function of the (normally mixed) multinomial probit model — f_ll_mnp","text":"","code":"data <- sim_mnp(N = 200, J = 3, P = 2, b = c(1,3)) theta <- attr(data, \"true\")[-1] f_ll_mnp(theta = theta, data = data) #> [1] -56.7067 # \\donttest{ nlm(f_ll_mnp, p = theta, data = data, neg = TRUE)$estimate #> [1] 2.944223 1.007717 0.265125 1.121199 # }"},{"path":"https://loelschlaeger.de/ino/reference/f_matyas.html","id":null,"dir":"Reference","previous_headings":"","what":"Matyas function — f_matyas","title":"Matyas function — f_matyas","text":"Matyas function","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_matyas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matyas function — f_matyas","text":"","code":"f_matyas(x)"},{"path":"https://loelschlaeger.de/ino/reference/f_matyas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matyas function — f_matyas","text":"x numeric vector length 2.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_matyas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matyas function — f_matyas","text":"function value x, single numeric.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_matyas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matyas function — f_matyas","text":"function multiple local minima one global minimum origin.","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_matyas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Matyas function — f_matyas","text":"https://en.wikipedia.org/wiki/Test_functions_for_optimization","code":""},{"path":"https://loelschlaeger.de/ino/reference/f_matyas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matyas function — f_matyas","text":"","code":"f_matyas(c(0, 0)) #> [1] 0"},{"path":"https://loelschlaeger.de/ino/reference/filter_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter optimization results — filter_results","title":"Filter optimization results — filter_results","text":"helper function filters optimization results.","code":""},{"path":"https://loelschlaeger.de/ino/reference/filter_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter optimization results — filter_results","text":"","code":"filter_results(   results,   run_ids,   optimizer_ids,   which_element,   only_comparable,   keep_empty = FALSE )"},{"path":"https://loelschlaeger.de/ino/reference/filter_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter optimization results — filter_results","text":"results nested list optimization results. element corresponds one optimization run. either list() run removed list results optimizer. results optimizer list, output apply_optimizer. run_ids vector indices. Selects first layer results. optimizer_ids vector indices. Selects second layer results. which_element character (vector). Selects third layer results. only_comparable See documentation method $results() Nop object. keep_empty Set TRUE (FALSE, default) keep (discard) empty entries.","code":""},{"path":"https://loelschlaeger.de/ino/reference/filter_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter optimization results — filter_results","text":"list.","code":""},{"path":"https://loelschlaeger.de/ino/reference/filter_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter optimization results — filter_results","text":"","code":"if (FALSE) { filter_results(   results = list(\"run\" = list(     \"optimizer1\" = list(       \"value\" = 1, \"comparable\" = FALSE     ),     \"optimizer2\" = list(       \"value\" = 2, \"comparable\" = TRUE      )   )),   run_ids = 1,   optimizer_id = 2,   which_element = \"value\",   only_comparable = TRUE ) }"},{"path":"https://loelschlaeger.de/ino/reference/hmm_ino.html","id":null,"dir":"Reference","previous_headings":"","what":"Example application to HMM likelihood — hmm_ino","title":"Example application to HMM likelihood — hmm_ino","text":"See vignette HMM likelihood details: vignette(\"example_hmm\", package = \"ino\")","code":""},{"path":"https://loelschlaeger.de/ino/reference/hmm_ino.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example application to HMM likelihood — hmm_ino","text":"","code":"data(\"hmm_ino\")"},{"path":"https://loelschlaeger.de/ino/reference/hmm_ino.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example application to HMM likelihood — hmm_ino","text":"Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/ino.html","id":null,"dir":"Reference","previous_headings":"","what":"ino: Analysis of Initialization for Numerical Optimization — ino","title":"ino: Analysis of Initialization for Numerical Optimization — ino","text":"package implements tools analyzing initialization numerical optimization.","code":""},{"path":[]},{"path":"https://loelschlaeger.de/ino/reference/ino.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ino: Analysis of Initialization for Numerical Optimization — ino","text":"Maintainer: Lennart Oelschläger oelschlaeger.lennart@gmail.com (ORCID) Authors: Marius Ötting marius.oetting@uni-bielefeld.de (ORCID) Dietmar Bauer dietmar.bauer@uni-bielefeld.de (ORCID)","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_TRUE_FALSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for proper boolean — is_TRUE_FALSE","title":"Check for proper boolean — is_TRUE_FALSE","text":"function checks whether input proper boolean, .e., either TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_TRUE_FALSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for proper boolean — is_TRUE_FALSE","text":"","code":"is_TRUE_FALSE(x, error = TRUE)"},{"path":"https://loelschlaeger.de/ino/reference/is_TRUE_FALSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for proper boolean — is_TRUE_FALSE","text":"x object. error case x proper boolean, either TRUE (default) throw error FALSE return invisibly FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_TRUE_FALSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for proper boolean — is_TRUE_FALSE","text":"error = TRUE, either invisibly TRUE error thrown. error = FALSE, invisibly TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_TRUE_FALSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for proper boolean — is_TRUE_FALSE","text":"","code":"if (FALSE) { is_TRUE_FALSE(TRUE) is_TRUE_FALSE(1) is_TRUE_FALSE(\"TRUE\") }"},{"path":"https://loelschlaeger.de/ino/reference/is_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for proper count — is_count","title":"Check for proper count — is_count","text":"function checks whether input proper count, .e., single, positive integer.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for proper count — is_count","text":"","code":"is_count(x, allow_zero = FALSE, error = TRUE)"},{"path":"https://loelschlaeger.de/ino/reference/is_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for proper count — is_count","text":"x object. allow_zero Either TRUE allow zero value, FALSE (default) . error case x proper count, either TRUE (default) throw error FALSE return invisibly FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for proper count — is_count","text":"error = TRUE, either invisibly TRUE error thrown. error = FALSE, invisibly TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for proper count — is_count","text":"","code":"if (FALSE) { is_count(1) is_count(0, allow_zero = TRUE) is_count(pi) is_count(\"1\") }"},{"path":"https://loelschlaeger.de/ino/reference/is_index_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for proper index vector — is_index_vector","title":"Check for proper index vector — is_index_vector","text":"function checks whether input proper index vector, .e., vector positive integer values.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_index_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for proper index vector — is_index_vector","text":"","code":"is_index_vector(x, error = TRUE)"},{"path":"https://loelschlaeger.de/ino/reference/is_index_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for proper index vector — is_index_vector","text":"x object. error case x proper index vector, either TRUE (default) throw error FALSE return invisibly FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_index_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for proper index vector — is_index_vector","text":"error = TRUE, either invisibly TRUE error thrown. error = FALSE, invisibly TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_index_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for proper index vector — is_index_vector","text":"","code":"if (FALSE) { is_index_vector(1:10) is_index_vector(-3:3) is_index_vector(LETTERS) is_index_vector(c(1, 2, pi)) }"},{"path":"https://loelschlaeger.de/ino/reference/is_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for proper name — is_name","title":"Check for proper name — is_name","text":"function checks whether input proper name, .e., single (non-trivial) character.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for proper name — is_name","text":"","code":"is_name(x, error = TRUE)"},{"path":"https://loelschlaeger.de/ino/reference/is_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for proper name — is_name","text":"x object. error case x proper name, either TRUE (default) throw error FALSE return invisibly FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for proper name — is_name","text":"error = TRUE, either invisibly TRUE error thrown. error = FALSE, invisibly TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for proper name — is_name","text":"","code":"if (FALSE) { is_name(\"one\") is_name(1) is_name(LETTERS[1:2]) is_name(\"\") }"},{"path":"https://loelschlaeger.de/ino/reference/is_name_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for proper name vector — is_name_vector","title":"Check for proper name vector — is_name_vector","text":"function checks whether input proper name vector, .e., vector (non-trivial) character values.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_name_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for proper name vector — is_name_vector","text":"","code":"is_name_vector(x, error = TRUE)"},{"path":"https://loelschlaeger.de/ino/reference/is_name_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for proper name vector — is_name_vector","text":"x object. error case x proper name vector, either TRUE (default) throw error FALSE return invisibly FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_name_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for proper name vector — is_name_vector","text":"error = TRUE, either invisibly TRUE error thrown. error = FALSE, invisibly TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_name_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for proper name vector — is_name_vector","text":"","code":"if (FALSE) { is_name_vector(\"one\") is_name_vector(1) is_name_vector(LETTERS[1:2]) is_name_vector(\"\") }"},{"path":"https://loelschlaeger.de/ino/reference/is_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for proper number — is_number","title":"Check for proper number — is_number","text":"function checks whether input proper number, .e., single numeric.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for proper number — is_number","text":"","code":"is_number(x, error = TRUE)"},{"path":"https://loelschlaeger.de/ino/reference/is_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for proper number — is_number","text":"x object. error case x proper number, either TRUE (default) throw error FALSE return invisibly FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for proper number — is_number","text":"error = TRUE, either invisibly TRUE error thrown. error = FALSE, invisibly TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for proper number — is_number","text":"","code":"if (FALSE) { is_number(1) is_number(pi) is_number(\"1\") }"},{"path":"https://loelschlaeger.de/ino/reference/is_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for proper proportion — is_proportion","title":"Check for proper proportion — is_proportion","text":"function checks whether input proper proportion, .e., single numeric 0 1.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for proper proportion — is_proportion","text":"","code":"is_proportion(x, error = TRUE)"},{"path":"https://loelschlaeger.de/ino/reference/is_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for proper proportion — is_proportion","text":"x object. error case x proper proportion, either TRUE (default) throw error FALSE return invisibly FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for proper proportion — is_proportion","text":"error = TRUE, either invisibly TRUE error thrown. error = FALSE, invisibly TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for proper proportion — is_proportion","text":"","code":"if (FALSE) { is_proportion(0.5) is_proportion(pi) is_proportion(\"1\") }"},{"path":"https://loelschlaeger.de/ino/reference/is_time_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for proper time limit — is_time_limit","title":"Check for proper time limit — is_time_limit","text":"function checks whether input proper time limit, .e., single, positive numeric.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_time_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for proper time limit — is_time_limit","text":"","code":"is_time_limit(x, error = TRUE)"},{"path":"https://loelschlaeger.de/ino/reference/is_time_limit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for proper time limit — is_time_limit","text":"x object. error case x proper time limit, either TRUE (default) throw error FALSE return invisibly FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_time_limit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for proper time limit — is_time_limit","text":"error = TRUE, either invisibly TRUE error thrown. error = FALSE, invisibly TRUE FALSE.","code":""},{"path":"https://loelschlaeger.de/ino/reference/is_time_limit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for proper time limit — is_time_limit","text":"","code":"if (FALSE) { is_time_limit(1) is_time_limit(pi) is_time_limit(-1) is_time_limit(\"1\") }"},{"path":"https://loelschlaeger.de/ino/reference/sim_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a time series from a Gaussian-hidden Markov model — sim_hmm","title":"Simulate a time series from a Gaussian-hidden Markov model — sim_hmm","text":"Simulate time series Gaussian-hidden Markov model","code":""},{"path":"https://loelschlaeger.de/ino/reference/sim_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a time series from a Gaussian-hidden Markov model — sim_hmm","text":"","code":"sim_hmm(T, N, theta)"},{"path":"https://loelschlaeger.de/ino/reference/sim_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a time series from a Gaussian-hidden Markov model — sim_hmm","text":"T integer, number observations. N integer, number states. theta numeric vector model parameters. first N*(N-1) elements logarithms non-diagonal elements transition probability matrix. next N elements mean values state-dependent normal distributions. last N elements logarithms standard deviations state-dependent normal distributions.","code":""},{"path":"https://loelschlaeger.de/ino/reference/sim_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a time series from a Gaussian-hidden Markov model — sim_hmm","text":"numeric vector, simulated time series.","code":""},{"path":[]},{"path":"https://loelschlaeger.de/ino/reference/sim_hmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a time series from a Gaussian-hidden Markov model — sim_hmm","text":"","code":"tpm <- matrix(c(0.8,0.1,0.2,0.9), nrow = 2) mu <- c(-2,2) sigma <- c(0.5,1) theta <- c(log(tpm[row(tpm) != col(tpm)]), mu, log(sigma)) data <- sim_hmm(T = 100, N = 2, theta = theta) plot(data, type = \"l\")"},{"path":"https://loelschlaeger.de/ino/reference/sim_mnp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from a (normally mixed) multinomial probit model — sim_mnp","title":"Simulate data from a (normally mixed) multinomial probit model — sim_mnp","text":"Simulate data (normally mixed) multinomial probit model","code":""},{"path":"https://loelschlaeger.de/ino/reference/sim_mnp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from a (normally mixed) multinomial probit model — sim_mnp","text":"","code":"sim_mnp(   N,   T = 1,   J,   P,   b = stats::rnorm(P),   Omega = NULL,   Sigma = diag(J),   X = function(n, t) matrix(stats::rnorm(J * P), nrow = J, ncol = P) )"},{"path":"https://loelschlaeger.de/ino/reference/sim_mnp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from a (normally mixed) multinomial probit model — sim_mnp","text":"N integer, number observations. T integer, number choice occasions. default, T = 1. J integer, number alternatives. P integer, number choice covariates. b numeric vector, mean effects vector length P. first element must 1 (normalization). Omega matrix, covariance matrix normal mixing distribution dimension P times P. Set NULL (default) mixing distribution. Sigma matrix, error term covariance matrix dimension J times J. X function samples covariates decider n choice occasion t. must two arguments n t, return numeric matrix dimension J times P.","code":""},{"path":"https://loelschlaeger.de/ino/reference/sim_mnp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from a (normally mixed) multinomial probit model — sim_mnp","text":"data.frame. first column (N) identifier decider, next column (T) identifier choice occasion. Next comes column y indices chosen alternatives. last columns contain column-wise entries covariate matrices. true model coefficients added output via attribute \"true\". already normalized can directly compared maximum likelihood estimate. Additional attributes \"J\" (number alternatives), \"P\" (number choice covariates), \"mix\" (boolean TRUE Omega NULL).","code":""},{"path":[]},{"path":"https://loelschlaeger.de/ino/reference/sim_mnp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data from a (normally mixed) multinomial probit model — sim_mnp","text":"","code":"sim_mnp(N = 3, J = 2, P = 2, b = c(1,-1), Omega = diag(2), Sigma = diag(2)) #>   N T y          1          2          3         4 #> 1 1 1 1 -0.2641145 -1.6843813 -2.3442969 0.3219130 #> 2 2 1 2 -1.0435238 -1.2559566  0.5038673 0.6550934 #> 3 3 1 2 -0.1246941 -0.4768646 -0.5785750 0.3330870"},{"path":"https://loelschlaeger.de/ino/reference/simplify_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify optimization results — simplify_results","title":"Simplify optimization results — simplify_results","text":"helper function simplifies optimization results (possible).","code":""},{"path":"https://loelschlaeger.de/ino/reference/simplify_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify optimization results — simplify_results","text":"","code":"simplify_results(results, simplify)"},{"path":"https://loelschlaeger.de/ino/reference/simplify_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify optimization results — simplify_results","text":"results nested list optimization results. element corresponds one optimization run. either list() run removed list results optimizer. results optimizer list, output apply_optimizer. simplify See documentation method $results() Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/simplify_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify optimization results — simplify_results","text":"list.","code":""},{"path":"https://loelschlaeger.de/ino/reference/simplify_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify optimization results — simplify_results","text":"","code":"if (FALSE) { simplify_results(   results = list(\"run\" = list(     \"optimizer1\" = list(       \"value\" = 1, \"comparable\" = FALSE     ),     \"optimizer2\" = list(       \"value\" = 2, \"comparable\" = TRUE      )   )),   simplify = TRUE ) }"},{"path":"https://loelschlaeger.de/ino/reference/standardize_argument.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize argument — standardize_argument","title":"Standardize argument — standardize_argument","text":"helper function standardizes numeric argument.","code":""},{"path":"https://loelschlaeger.de/ino/reference/standardize_argument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize argument — standardize_argument","text":"","code":"standardize_argument(argument, by_column, center, scale, ignore)"},{"path":"https://loelschlaeger.de/ino/reference/standardize_argument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize argument — standardize_argument","text":"argument numeric vector, matrix, data.frame. by_column, center, scale, ignore See documentation method $standardize() Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/standardize_argument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize argument — standardize_argument","text":"standardized argument.","code":""},{"path":"https://loelschlaeger.de/ino/reference/standardize_argument.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize argument — standardize_argument","text":"","code":"if (FALSE) { standardize_argument(   argument = diag(3), by_column = TRUE, center = TRUE, scale = TRUE,   ignore = 1:2 ) }"},{"path":"https://loelschlaeger.de/ino/reference/subset_argument.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset argument — subset_argument","title":"Subset argument — subset_argument","text":"helper function subsets argument.","code":""},{"path":"https://loelschlaeger.de/ino/reference/subset_argument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset argument — subset_argument","text":"","code":"subset_argument(   argument,   by_row,   how,   proportion,   centers,   ignore,   seed = NULL )"},{"path":"https://loelschlaeger.de/ino/reference/subset_argument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset argument — subset_argument","text":"argument vector, matrix, data.frame. case = \"(dis)similar\", must numeric. by_row, , proportion, centers, ignore, seed See documentation method $reduce() Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/subset_argument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset argument — subset_argument","text":"subsetted argument.","code":""},{"path":"https://loelschlaeger.de/ino/reference/subset_argument.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset argument — subset_argument","text":"","code":"if (FALSE) { subset_argument(   argument = 1:6, by_row = TRUE, how = \"dissimilar\", proportion = 0.5,   centers = 3, ignore = integer(), seed = 1 ) }"},{"path":"https://loelschlaeger.de/ino/reference/test_nop.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Nop object — test_nop","title":"Test Nop object — test_nop","text":"helper function validates configuration Nop object.","code":""},{"path":"https://loelschlaeger.de/ino/reference/test_nop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Nop object — test_nop","text":"","code":"test_nop(x, at, optimizer_ids, time_limit, verbose, digits)"},{"path":"https://loelschlaeger.de/ino/reference/test_nop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Nop object — test_nop","text":"x Nop object. , time_limit, verbose, digits See documentation method $test() Nop object. optimizer_ids vector indices.","code":""},{"path":"https://loelschlaeger.de/ino/reference/test_nop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Nop object — test_nop","text":"Invisibly TRUE tests successful.","code":""},{"path":"https://loelschlaeger.de/ino/reference/test_nop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Nop object — test_nop","text":"","code":"if (FALSE) { TODO }"},{"path":"https://loelschlaeger.de/ino/reference/transfer_nop.html","id":null,"dir":"Reference","previous_headings":"","what":"Transfer Nop object — transfer_nop","title":"Transfer Nop object — transfer_nop","text":"Transfer Nop object","code":""},{"path":"https://loelschlaeger.de/ino/reference/transfer_nop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transfer Nop object — transfer_nop","text":"","code":"transfer_nop(   x,   var = data.frame(old = c(\".f_name\", \".arguments\", \".original_arguments\",     \".true_parameter\", \".true_value\", \".show_minimum\", \".optimizer\", \".results\",     \".runs_last\", \".optimization_labels\"), new = c(\".f_name\", \".arguments\",     \".original_arguments\", \".true_parameter\", \".true_value\", \".minimized\", \".optimizer\",     \".results\", \".runs_last\", \".optimization_labels\")) )"},{"path":"https://loelschlaeger.de/ino/reference/transfer_nop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transfer Nop object — transfer_nop","text":"x TODO return TODO","code":""},{"path":"https://loelschlaeger.de/ino/news/index.html","id":"ino-0209000","dir":"Changelog","previous_headings":"","what":"ino 0.2.0.9000","title":"ino 0.2.0.9000","text":"get_vars() function new argument simplify. set TRUE (default), nested list output simplified. Big update: using R6 classes now.","code":""},{"path":"https://loelschlaeger.de/ino/news/index.html","id":"ino-020","dir":"Changelog","previous_headings":"","what":"ino 0.2.0","title":"ino 0.2.0","text":"CRAN release: 2022-09-29","code":""},{"path":"https://loelschlaeger.de/ino/news/index.html","id":"new-functionality-0-2-0","dir":"Changelog","previous_headings":"","what":"New functionality","title":"ino 0.2.0","text":"get_vars() function prints available variables saved ino object. get_fails() function wrapper get_vars() provides failure messages optimization runs. summary() method now can compute custom statistics variables saved ino object.","code":""},{"path":"https://loelschlaeger.de/ino/news/index.html","id":"new-optimizer-framework-0-2-0","dir":"Changelog","previous_headings":"","what":"New optimizer framework","title":"ino 0.2.0","text":"Optimizer setup_ino() now specified via framework provided {optimizeR} package. Optimizer can changed afterwards via update_opt() helper function.","code":""},{"path":"https://loelschlaeger.de/ino/news/index.html","id":"ino-010","dir":"Changelog","previous_headings":"","what":"ino 0.1.0","title":"ino 0.1.0","text":"CRAN release: 2022-07-16 Initial version.","code":""}]
