% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nop_old.R
\name{Nop_old}
\alias{Nop_old}
\title{Nop Object}
\value{
Either the \code{Nop} object to allow for method chaining, or a result.
Please refer to the respective documentation for the output of the different
methods.
}
\description{
A \code{Nop} object defines a numerical optimization problem.
}
\section{Getting started}{
\subsection{Step 1: Create a \code{Nop} object}{

Call \code{object <- Nop$new(objective, target, npar, ...)} where
\itemize{
\item \code{objective} is a single-valued function to be optimized,
\item \code{target} specifies the name(s) of the target argument(s) (if not
supplied, the first argument of \code{objective} is selected),
\item \code{npar} specifies the length(s) of the target argument(s),
\item and \code{...} are additional arguments for \code{objective} that are kept
fixed during the optimization (if any).
These arguments can be accessed via the \code{$argument()} method.
}
}

\subsection{Step 2: Specify numerical optimizers}{

Call \code{object$set_optimizer(<optimizer object>)}, where
\code{<optimizer object>} is an object of class \code{optimizer}. Such
objects can be created via the \code{{optimizeR}} package, please refer to
\href{https://loelschlaeger.de/optimizeR/}{the package homepage} for details.

For example,
\itemize{
\item \code{optimizeR::Optimizer$new(which = "stats::nlm")} defines the
\code{\link[stats]{nlm}} optimizer,
\item \code{optimizeR::Optimizer$new(which = "stats::optim")} defines the
\code{\link[stats]{optim}} optimizer.
}
}

\subsection{Step 3: Select initial values}{

Call initialization methods to define starting values for the
optimization (the different initialization strategies are illustrated in the
package vignettes), for example:
\itemize{
\item \code{object$initialize_fixed()} for fixed initial values,
\item \code{object$initialize_random()} for random initial values,
\item \code{object$initialize_continue()} for initial values based on parameter
estimates from previous optimization runs.
}
}

\subsection{Step 4: Optimization}{

Call \code{object$optimize()} for the optimization. See below for methods
to access and analyze the results.
}
}

\section{Methods for accessing and analyzing the results}{
\itemize{
\item \code{$results()} returns a \code{list} of the optimization results,
\item \code{$summary()} summarizes the results in a \code{data.frame},
\item \code{$optima()} returns a frequency table of the identified optima,
\item \code{$plot()} visualizes the optimization times or values,
\item \code{$best()} returns the best found parameter vector or function value.
}
}

\section{Other methods and fields}{
\itemize{
\item \code{$evaluate()} evaluates the target function at some point,
\item \code{$delete()} deletes optimization results,
\item \code{$elements()} returns the names of the available elements in the
optimizer outputs,
\item \code{$runs()} returns the number of performed optimization runs,
\item \code{$initialize_reset()} resets the initial values,
\item \code{$f_name} stores the function name,
\item \code{$npar} stores the length of the target argument,
\item \code{$fresh_label} generates a new label for the optimization,
\item \code{$reserved_labels} returns the names of reserved labels.
}
}

\section{Progress bar during optimization}{
Displaying progress during multiple optimization runs via the
\code{{progressr}} package is supported. To get started, run
\preformatted{
progressr::handlers(global = TRUE)
}
and see \code{\link[progressr]{handlers}} for details.
}

\section{Parallel optimization}{
Parallel computation of multiple optimization runs via the \code{{future}}
package is supported. To get started, run one of
\preformatted{
future::plan(future::sequential)
future::plan(future::multisession)
future::plan(future::multicore)
}
and see \code{\link[future]{plan}} for details.
}

\examples{
# Minimization of the Ackley function
ackley <- TestFunctions::TF_ackley

Nop_ackley <- Nop$new(objective = ackley, npar = 2)$  # define the Nop object
  set_optimizer(
    optimizeR::Optimizer$new(which = "stats::nlm") # select the nlm optimizer
  )$
  initialize_random(
    sampler = function() rnorm(2, mean = 0, sd = 3),
    runs = 100, seed = 1
  )$                                          # initialize 100 times randomly
  optimize(which_direction = "min")           # minimize

Nop_ackley$optima(print.rows = 5) # get optima overview

Nop_ackley$best("parameter")                  # return best parameter vector

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Nop-print}{\code{Nop_old$print()}}
\item \href{#method-Nop-fixed_argument}{\code{Nop_old$fixed_argument()}}
\item \href{#method-Nop-set_argument}{\code{Nop_old$set_argument()}}
\item \href{#method-Nop-get_argument}{\code{Nop_old$get_argument()}}
\item \href{#method-Nop-standardize}{\code{Nop_old$standardize()}}
\item \href{#method-Nop-reduce}{\code{Nop_old$reduce()}}
\item \href{#method-Nop-initialize_continue}{\code{Nop_old$initialize_continue()}}
\item \href{#method-Nop-initialize_promising}{\code{Nop_old$initialize_promising()}}
\item \href{#method-Nop-initialize_transform}{\code{Nop_old$initialize_transform()}}
\item \href{#method-Nop-optimize}{\code{Nop_old$optimize()}}
\item \href{#method-Nop-optima}{\code{Nop_old$optima()}}
\item \href{#method-Nop-plot}{\code{Nop_old$plot()}}
\item \href{#method-Nop-deviation}{\code{Nop_old$deviation()}}
\item \href{#method-Nop-clone}{\code{Nop_old$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-print"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-print}{}}}
\subsection{Method \code{print()}}{
Prints details of the numerical optimization problem.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Currently not used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-fixed_argument"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-fixed_argument}{}}}
\subsection{Method \code{fixed_argument()}}{
Manages fixed arguments for \code{objective}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$fixed_argument(action, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{action}}{One of:
\itemize{
\item \code{"set"} to set an argument,
\item \code{"get"} to extract an argument value,
\item \code{"remove"} to remove an argument,
\item \code{"reset"} to reset an argument to the original value (if any),
\item \code{"modify"} to modify an argument to a new value, but the original
value is saved and can be recovered via \code{"reset"}.
}}

\item{\code{...}}{Additional parameters depending on \code{action}:
\itemize{
\item if \code{action = "set"} or \code{"modify"}, one or more named
arguments,
\item if \code{action = "get"}, \code{"remove"}, or \code{"reset"},
the \code{argument_name}, a \code{character} that selects an argument
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The argument value if \code{action = "get"} and invisibly the \code{Nop}
object, else.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-set_argument"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-set_argument}{}}}
\subsection{Method \code{set_argument()}}{
Set a fixed argument for \code{objective}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$set_argument(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{One or more named arguments.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-get_argument"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-get_argument}{}}}
\subsection{Method \code{get_argument()}}{
Get a fixed argument for \code{objective}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$get_argument(argument_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{argument_name}}{A \code{character} that selects an argument.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-standardize"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-standardize}{}}}
\subsection{Method \code{standardize()}}{
Standardizes the optimization problem.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$standardize(
  argument_name,
  byrow = FALSE,
  center = TRUE,
  scale = TRUE,
  ignore = integer()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{argument_name}}{A \code{character}, the name of the fixed argument of \code{object} to be
standardized. The argument must a \code{numeric} \code{vector},
\code{matrix}, or \code{data.frame}.}

\item{\code{byrow}}{Only relevant if the argument \code{argument_name} is a \code{matrix} or
a \code{data.frame}.
In that case, either \code{TRUE} to standardize row-wise or
\code{FALSE} (default) to standardize row-wise.}

\item{\code{center}}{Either \code{TRUE} (default) for centering or \code{FALSE}, else.}

\item{\code{scale}}{Either \code{TRUE} (default) for scaling or \code{FALSE}, else.}

\item{\code{ignore}}{A \code{integer} (vector) of column indices (or row indices if
\code{byrow = TRUE}) to not standardize.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-reduce"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-reduce}{}}}
\subsection{Method \code{reduce()}}{
Reduces the optimization problem.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$reduce(
  argument_name,
  byrow = TRUE,
  how = "random",
  proportion = 0.5,
  centers = 2,
  ignore = integer()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{argument_name}}{A \code{character}, the name of the argument of \code{f} to be reduced.}

\item{\code{byrow}}{Only relevant if the argument \code{argument_name} is a \code{matrix} or
a \code{data.frame}.
In that case, either \code{TRUE} to reduce row-wise (default) or
\code{FALSE} to reduce column-wise.}

\item{\code{how}}{A \code{character}, specifying how to reduce. Can be one of:
\itemize{
\item \code{"random"} (default), reduce at random
\item \code{"first"}, reduce to the first elements
\item \code{"last"}, reduce to the last elements
\item \code{"similar"}, reduce to similar elements
\item \code{"dissimilar"}, reduce to dissimilar elements
Note that \code{"similar"} and \code{"dissimilar"} are based on k-means
clustering via \code{\link[stats]{kmeans}}. To apply these options,
the argument \code{argument_name} must be \code{numeric}.
}}

\item{\code{proportion}}{A \code{numeric} between \code{0} and \code{1}, specifying the
reduction proportion.
By default, \code{proportion = 0.5}.}

\item{\code{centers}}{Only relevant, if \code{how = "(dis)similar"}.
In that case, passed to \code{\link[stats]{kmeans}}.
By default, \code{centers = 2}.}

\item{\code{ignore}}{Only relevant, if \code{how = "(dis)similar"}.
In that case a \code{integer} (vector) of row indices (or column indices
if \code{byrow = FALSE}) to ignore for clustering.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-initialize_continue"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-initialize_continue}{}}}
\subsection{Method \code{initialize_continue()}}{
Defines initial values based on results from previous optimizations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$initialize_continue(
  which_run,
  which_optimizer = "all",
  which_direction = c("min", "max")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{which_run}}{Selects results of optimization runs.

By default, \code{which_run = "all"} selects all available results.

It can also be
\itemize{
\item \code{"success"} for the results of successful optimization runs,
\item \code{"comparable"} for the results of comparable optimizations (i.e.,
results obtained for the original optimization problem without any
transformations),
\item a \code{character} (vector) of optimization labels.
}

Filters for optimization runs can be negated by putting a \code{"!"} in
front, for example \code{which_run = "!success"} filters for failed runs.

Filters can be combined (by default via logical \emph{and}), for example
\code{which_run = c("!success", "comparable")} filters for comparable
runs that failed.

Filters can also be combined via logical \emph{or} by adding
\code{"logical" = "or"}, for example
\code{which_run = c("comparable", "label", "logical" = "or")} filters for
runs that are either comparable or have the label \code{"label"}.

Alternatively, \code{which_run} can be an \code{integer} (vector) of run ids
as provided for example by \code{$best()}.}

\item{\code{which_optimizer}}{Selects numerical optimizers. Either:
\itemize{
\item \code{"all"} for all specified optimizers,
\item a \code{character} (vector) of specified optimizer labels,
\item an \code{integer} (vector) of optimizer ids as defined in the
\code{$print()} output.
}}

\item{\code{which_direction}}{Selects the type of optimization. Either:
\itemize{
\item \code{"min"} for minimization,
\item \code{"max"} for maximization.
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-initialize_promising"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-initialize_promising}{}}}
\subsection{Method \code{initialize_promising()}}{
Defines a subset of promising initial values for the optimization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$initialize_promising(proportion, condition = "gradient_steep")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{proportion}}{A \code{numeric} between 0 and 1, the subset proportion.}

\item{\code{condition}}{Defines the condition on which the initial values are selected, either
\itemize{
\item \code{"gradient_steep"} for the points where the numerical gradient is steepest,
\item \code{"value_low"} for the points where the function value is lowest,
\item \code{"value_high"} for the points where the function value is highest.
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-initialize_transform"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-initialize_transform}{}}}
\subsection{Method \code{initialize_transform()}}{
Transforms the currently defined initial values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$initialize_transform(transform = function(x) x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{transform}}{A \code{function} for transforming the initial values. It must be able to
receive and return a \code{numeric} \code{vector} of length
\code{sum(self$npar)}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-optimize"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-optimize}{}}}
\subsection{Method \code{optimize()}}{
Optimizes the function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$optimize(
  optimization_label = self$fresh_label,
  which_optimizer = "all",
  which_direction = "min",
  seconds = Inf,
  hide_warnings = TRUE,
  reset_initial = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{optimization_label}}{A \code{character} to specify a label for the optimization.
Labels are useful to distinguish optimization runs.
By default, \code{self$fresh_label} creates a new label.}

\item{\code{which_optimizer}}{Selects numerical optimizers. Either:
\itemize{
\item \code{"all"} for all specified optimizers,
\item a \code{character} (vector) of specified optimizer labels,
\item an \code{integer} (vector) of optimizer ids as defined in the
\code{$print()} output.
}}

\item{\code{which_direction}}{Selects the type of optimization. Either:
\itemize{
\item \code{"min"} for minimization,
\item \code{"max"} for maximization.
}}

\item{\code{seconds}}{A \code{numeric}, a time limit in seconds. Optimization is interrupted
prematurely if \code{seconds} is exceeded.
This currently only works reliably under Windows OS.
No time limit if \code{seconds = Inf} (the default).}

\item{\code{hide_warnings}}{Either \code{TRUE} or \code{FALSE} to hide (show) warning messages
during the function evaluation or optimization.}

\item{\code{reset_initial}}{Either \code{TRUE} (default) to reset the initial values after the
optimization, or \code{FALSE}, else.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Parallel computation of multiple optimization runs via the \code{{future}}
package and displaying progress via the \code{{progressr}} package are supported.
}

\subsection{Returns}{
Invisibly the \code{Nop} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-optima"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-optima}{}}}
\subsection{Method \code{optima()}}{
Provides a frequency overview of the identified optimum values.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$optima(
  which_run = "comparable",
  which_direction = "min",
  which_optimizer = "all",
  group_by = NULL,
  sort_by = "frequency",
  print.rows = 0,
  verbose = self$verbose
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{which_run}}{Selects results of optimization runs.

By default, \code{which_run = "all"} selects all available results.

It can also be
\itemize{
\item \code{"success"} for the results of successful optimization runs,
\item \code{"comparable"} for the results of comparable optimizations (i.e.,
results obtained for the original optimization problem without any
transformations),
\item a \code{character} (vector) of optimization labels.
}

Filters for optimization runs can be negated by putting a \code{"!"} in
front, for example \code{which_run = "!success"} filters for failed runs.

Filters can be combined (by default via logical \emph{and}), for example
\code{which_run = c("!success", "comparable")} filters for comparable
runs that failed.

Filters can also be combined via logical \emph{or} by adding
\code{"logical" = "or"}, for example
\code{which_run = c("comparable", "label", "logical" = "or")} filters for
runs that are either comparable or have the label \code{"label"}.

Alternatively, \code{which_run} can be an \code{integer} (vector) of run ids
as provided for example by \code{$best()}.}

\item{\code{which_direction}}{Selects the type of optimization. Either:
\itemize{
\item \code{"min"} for minimization,
\item \code{"max"} for maximization.
}}

\item{\code{which_optimizer}}{Selects numerical optimizers. Either:
\itemize{
\item \code{"all"} for all specified optimizers,
\item a \code{character} (vector) of specified optimizer labels,
\item an \code{integer} (vector) of optimizer ids as defined in the
\code{$print()} output.
}}

\item{\code{group_by}}{Selects how the output is grouped. Either:
\itemize{
\item \code{NULL} to not group (default),
\item \code{".optimization_label"} to group by optimization label,
\item \code{".optimizer_label"} to group by optimizer label.
}}

\item{\code{sort_by}}{Either:
\itemize{
\item \code{"frequency"} (default) to sort rows by frequency,
\item \code{"value"} to sort by function value.
}}

\item{\code{print.rows}}{An \code{integer}, specifying the maximal number of rows to be
printed. No printing if \code{print.rows = 0}, which is the default.}

\item{\code{verbose}}{Either \code{TRUE} to print progress and details, or \code{FALSE} to hide
such messages.
This can be defined globally via \code{self$verbose}.
By default, \code{verbose = getOption("verbose", default = FALSE)}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{data.frame}. If \code{group_by} is not \code{NULL}, a \code{list}
of \code{data.frame}s.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-plot"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-plot}{}}}
\subsection{Method \code{plot()}}{
Visualizes the optimization time or value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$plot(
  which_element = "seconds",
  group_by = NULL,
  relative = FALSE,
  which_run = "comparable",
  which_direction = c("min", "max"),
  which_optimizer = "all",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{which_element}}{Either:
\itemize{
\item \code{"seconds"} to plot the optimization times (default)
\item \code{"value"} to plot the optimization values
}}

\item{\code{group_by}}{Selects how the output is grouped. Either:
\itemize{
\item \code{NULL} to not group (default),
\item \code{".optimization_label"} to group by optimization label,
\item \code{".optimizer_label"} to group by optimizer label.
}}

\item{\code{relative}}{Only if \code{which_element = "seconds"}.
In this case, set to \code{TRUE} to plot relative time differences with
respect to the overall median.}

\item{\code{which_run}}{Selects results of optimization runs.

By default, \code{which_run = "all"} selects all available results.

It can also be
\itemize{
\item \code{"success"} for the results of successful optimization runs,
\item \code{"comparable"} for the results of comparable optimizations (i.e.,
results obtained for the original optimization problem without any
transformations),
\item a \code{character} (vector) of optimization labels.
}

Filters for optimization runs can be negated by putting a \code{"!"} in
front, for example \code{which_run = "!success"} filters for failed runs.

Filters can be combined (by default via logical \emph{and}), for example
\code{which_run = c("!success", "comparable")} filters for comparable
runs that failed.

Filters can also be combined via logical \emph{or} by adding
\code{"logical" = "or"}, for example
\code{which_run = c("comparable", "label", "logical" = "or")} filters for
runs that are either comparable or have the label \code{"label"}.

Alternatively, \code{which_run} can be an \code{integer} (vector) of run ids
as provided for example by \code{$best()}.}

\item{\code{which_direction}}{Selects the type of optimization. Either:
\itemize{
\item \code{"min"} for minimization,
\item \code{"max"} for maximization.
}}

\item{\code{which_optimizer}}{Selects numerical optimizers. Either:
\itemize{
\item \code{"all"} for all specified optimizers,
\item a \code{character} (vector) of specified optimizer labels,
\item an \code{integer} (vector) of optimizer ids as defined in the
\code{$print()} output.
}}

\item{\code{...}}{Currently not used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{\link[ggplot2]{ggplot}} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-deviation"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-deviation}{}}}
\subsection{Method \code{deviation()}}{
Visualizes deviation of parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$deviation(
  reference,
  which_element = "initial",
  which_run = "all",
  which_optimizer = "all",
  only_comparable = FALSE,
  title = "Parameter deviation",
  ylim = c(NA, NA),
  parameter_labels = paste0("theta", 1:self$npar)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reference}}{A \code{numeric} of length \code{self$npar}, the reference parameters.}

\item{\code{which_element}}{Either:
\itemize{
\item \code{"initial"} to compute deviations to the initial values (default)
\item \code{"parameter"} to compute deviations to the estimated parameters
}}

\item{\code{which_run}}{Selects results of optimization runs.

By default, \code{which_run = "all"} selects all available results.

It can also be
\itemize{
\item \code{"success"} for the results of successful optimization runs,
\item \code{"comparable"} for the results of comparable optimizations (i.e.,
results obtained for the original optimization problem without any
transformations),
\item a \code{character} (vector) of optimization labels.
}

Filters for optimization runs can be negated by putting a \code{"!"} in
front, for example \code{which_run = "!success"} filters for failed runs.

Filters can be combined (by default via logical \emph{and}), for example
\code{which_run = c("!success", "comparable")} filters for comparable
runs that failed.

Filters can also be combined via logical \emph{or} by adding
\code{"logical" = "or"}, for example
\code{which_run = c("comparable", "label", "logical" = "or")} filters for
runs that are either comparable or have the label \code{"label"}.

Alternatively, \code{which_run} can be an \code{integer} (vector) of run ids
as provided for example by \code{$best()}.}

\item{\code{which_optimizer}}{Selects numerical optimizers. Either:
\itemize{
\item \code{"all"} for all specified optimizers,
\item a \code{character} (vector) of specified optimizer labels,
\item an \code{integer} (vector) of optimizer ids as defined in the
\code{$print()} output.
}}

\item{\code{parameter_labels}}{A \code{character} of length \code{length(reference)} with labels for the
parameters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{\link[ggplot2]{ggplot}} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Nop-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Nop-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Nop_old$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
